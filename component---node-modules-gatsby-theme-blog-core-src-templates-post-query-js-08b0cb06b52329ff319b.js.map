{"version":3,"sources":["webpack:///./node_modules/gatsby-theme-blog/src/components/post-title.js","webpack:///./node_modules/gatsby-theme-blog/src/components/post-date.js","webpack:///./node_modules/gatsby-theme-blog/src/components/post-footer.js","webpack:///./node_modules/gatsby-theme-blog/src/components/post.js","webpack:///./node_modules/gatsby-theme-blog-core/src/templates/post-query.js","webpack:///./node_modules/gatsby-theme-blog/src/gatsby-theme-blog-core/components/post.js"],"names":["PostTitle","props","h1","PostDate","p","sx","fontSize","mt","mb","Footer","previous","next","css","pt","hr","as","flexWrap","justifyContent","listStyle","padding","a","Link","to","slug","rel","title","Post","data","post","site","siteMetadata","location","description","excerpt","keywords","date","body","PostPage","blogPost","query"],"mappings":"wOAKeA,EAFG,SAAAC,GAAK,OAAI,YAAC,IAAOC,GAAOD,I,yNCA1C,IAWeE,EAXE,SAAAF,GAAK,OACpB,YAAC,IAAOG,EAAR,GACEC,GAAI,CACFC,SAAU,EACVC,IAAK,EACLC,GAAI,IAEFP,K,wBCkCOQ,EAtCA,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,KAAb,OACb,sBACEC,IAAKA,YAAI,CACPL,GAAI,EACJM,GAAI,KAGN,YAAC,IAAOC,GAAR,MACA,YAAC,IAAD,OACEJ,GAAYC,IACZ,YAAC,IAAD,CACEI,GAAG,KACHH,IAAKA,YAAI,CACPI,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,KAGX,sBACGT,GACC,YAAC,IAAOU,EAAR,CAAUL,GAAIM,IAAMC,GAAIZ,EAASa,KAAMC,IAAI,QAA3C,KACKd,EAASe,QAIlB,sBACGd,GACC,YAAC,IAAOS,EAAR,CAAUL,GAAIM,IAAMC,GAAIX,EAAKY,KAAMC,IAAI,QACpCb,EAAKc,MADR,UCEGC,EA1BF,SAAC,GAAD,QACXC,KACEC,EAFS,EAETA,KAEkBH,EAJT,EAGTI,KACEC,aAAgBL,MAGpBM,EAPW,EAOXA,SACArB,EARW,EAQXA,SACAC,EATW,EASXA,KATW,OAWX,YAAC,IAAD,CAAQoB,SAAUA,EAAUN,MAAOA,GACjC,YAAC,IAAD,CACEA,MAAOG,EAAKH,MACZO,YAAaJ,EAAKK,QAClBC,SAAUN,EAAKM,WAEjB,wBACE,YAAC,EAAD,KAAYN,EAAKH,OACjB,YAAC,EAAD,KAAWG,EAAKO,MAChB,YAAC,cAAD,KAAcP,EAAKQ,OAErB,YAAC,EAAe,CAAE1B,WAAUC,W,urBC/BhC,sCAEe0B,UCAA,YAAyB,IAAtBN,EAAqB,EAArBA,SAAUJ,EAAW,EAAXA,KAClBW,EAA6BX,EAA7BW,SAAU5B,EAAmBiB,EAAnBjB,SAAUC,EAASgB,EAAThB,KAE5B,OACE,YAAC,EAAD,CACEgB,KAAI,KAAOA,EAAP,CAAaC,KAAMU,IACvBP,SAAUA,EACVrB,SAAUA,EACVC,KAAMA,KDRG0B,IAEFE,EAAK","file":"component---node-modules-gatsby-theme-blog-core-src-templates-post-query-js-08b0cb06b52329ff319b.js","sourcesContent":["import React from \"react\"\nimport { Styled } from \"theme-ui\"\n\nconst PostTitle = props => <Styled.h1 {...props} />\n\nexport default PostTitle\n","/** @jsx jsx */\nimport { Styled, jsx } from \"theme-ui\"\n\nconst PostDate = props => (\n  <Styled.p\n    sx={{\n      fontSize: 1,\n      mt: -3,\n      mb: 3,\n    }}\n    {...props}\n  />\n)\n\nexport default PostDate\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport { css, Styled, Flex } from \"theme-ui\"\n\nimport Bio from \"../components/bio\"\n\nconst Footer = ({ previous, next }) => (\n  <footer\n    css={css({\n      mt: 4,\n      pt: 3,\n    })}\n  >\n    <Styled.hr />\n    <Bio />\n    {(previous || next) && (\n      <Flex\n        as=\"ul\"\n        css={css({\n          flexWrap: `wrap`,\n          justifyContent: `space-between`,\n          listStyle: `none`,\n          padding: 0,\n        })}\n      >\n        <li>\n          {previous && (\n            <Styled.a as={Link} to={previous.slug} rel=\"prev\">\n              ← {previous.title}\n            </Styled.a>\n          )}\n        </li>\n        <li>\n          {next && (\n            <Styled.a as={Link} to={next.slug} rel=\"next\">\n              {next.title} →\n            </Styled.a>\n          )}\n        </li>\n      </Flex>\n    )}\n  </footer>\n)\n\nexport default Footer\n","import React from \"react\"\n\nimport { MDXRenderer } from \"gatsby-plugin-mdx\"\n\nimport Layout from \"./layout\"\nimport SEO from \"./seo\"\nimport PostTitle from \"./post-title\"\nimport PostDate from \"./post-date\"\nimport PostFooter from \"./post-footer\"\n\nconst Post = ({\n  data: {\n    post,\n    site: {\n      siteMetadata: { title },\n    },\n  },\n  location,\n  previous,\n  next,\n}) => (\n  <Layout location={location} title={title}>\n    <SEO\n      title={post.title}\n      description={post.excerpt}\n      keywords={post.keywords}\n    />\n    <main>\n      <PostTitle>{post.title}</PostTitle>\n      <PostDate>{post.date}</PostDate>\n      <MDXRenderer>{post.body}</MDXRenderer>\n    </main>\n    <PostFooter {...{ previous, next }} />\n  </Layout>\n)\n\nexport default Post\n","import { graphql } from \"gatsby\"\nimport PostPage from \"../components/post\"\n\nexport default PostPage\n\nexport const query = graphql`\n  query PostPageQuery($id: String!, $previousId: String, $nextId: String) {\n    site {\n      siteMetadata {\n        title\n        social {\n          name\n          url\n        }\n      }\n    }\n    blogPost(id: { eq: $id }) {\n      id\n      excerpt\n      body\n      slug\n      title\n      tags\n      keywords\n      date(formatString: \"MMMM DD, YYYY\")\n    }\n    previous: blogPost(id: { eq: $previousId }) {\n      id\n      excerpt\n      slug\n      title\n      date(formatString: \"MMMM DD, YYYY\")\n    }\n    next: blogPost(id: { eq: $nextId }) {\n      id\n      excerpt\n      slug\n      title\n      date(formatString: \"MMMM DD, YYYY\")\n    }\n  }\n`\n","import React from \"react\"\nimport Post from \"../../components/post\"\n\nexport default ({ location, data }) => {\n  const { blogPost, previous, next } = data\n\n  return (\n    <Post\n      data={{ ...data, post: blogPost }}\n      location={location}\n      previous={previous}\n      next={next}\n    />\n  )\n}\n"],"sourceRoot":""}