{"version":3,"sources":["webpack:///./node_modules/@material-ui/core/esm/FormGroup/FormGroup.js","webpack:///./node_modules/@material-ui/core/esm/FormControlLabel/FormControlLabel.js","webpack:///./node_modules/@material-ui/core/esm/internal/svg-icons/CheckBoxOutlineBlank.js","webpack:///./node_modules/@material-ui/core/esm/internal/svg-icons/CheckBox.js","webpack:///./node_modules/@material-ui/core/esm/internal/svg-icons/IndeterminateCheckBox.js","webpack:///./node_modules/@material-ui/core/esm/Checkbox/Checkbox.js","webpack:///./src/pages/Sidebar.tsx"],"names":["props","ref","classes","className","_props$row","row","other","root","withStyles","display","flexDirection","flexWrap","name","checked","control","disabledProp","disabled","label","inputRef","_props$labelPlacement","labelPlacement","onChange","value","muiFormControl","useFormControl","controlProps","forEach","key","concat","capitalize","Typography","component","theme","alignItems","cursor","verticalAlign","WebkitTapHighlightColor","marginLeft","marginRight","labelPlacementStart","labelPlacementTop","labelPlacementBottom","color","palette","text","createSvgIcon","d","defaultCheckedIcon","CheckBox","defaultIcon","CheckBoxOutlineBlank","defaultIndeterminateIcon","IndeterminateCheckBox","_props$checkedIcon","checkedIcon","_props$color","_props$icon","icon","_props$indeterminate","indeterminate","_props$indeterminateI","indeterminateIcon","inputProps","_props$size","size","SwitchBase","type","fontSize","secondary","colorPrimary","primary","main","backgroundColor","action","hoverOpacity","colorSecondary","Sidebar","checkboxes","useState","state","setState","map","checkbox","index","checkedB","e","console","log","target","count"],"mappings":"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","file":"component---src-pages-sidebar-tsx-766782de0f10df0cf603.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    flexWrap: 'wrap'\n  },\n\n  /* Styles applied to the root element if `row={true}`. */\n  row: {\n    flexDirection: 'row'\n  }\n};\n/**\n * `FormGroup` wraps controls such as `Checkbox` and `Switch`.\n * It provides compact row layout.\n * For the `Radio`, you should be using the `RadioGroup` component instead of this one.\n */\n\nvar FormGroup = React.forwardRef(function FormGroup(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$row = props.row,\n      row = _props$row === void 0 ? false : _props$row,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"row\"]);\n\n  return (/*#__PURE__*/React.createElement(\"div\", _extends({\n      className: clsx(classes.root, className, row && classes.row),\n      ref: ref\n    }, other))\n  );\n});\nprocess.env.NODE_ENV !== \"production\" ? FormGroup.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Display group of elements in a compact row.\n   */\n  row: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormGroup'\n})(FormGroup);","import \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/es6.function.name\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport { useFormControl } from '../FormControl';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      alignItems: 'center',\n      cursor: 'pointer',\n      // For correct alignment with the text.\n      verticalAlign: 'middle',\n      WebkitTapHighlightColor: 'transparent',\n      marginLeft: -11,\n      marginRight: 16,\n      // used for row presentation of radio/checkbox\n      '&$disabled': {\n        cursor: 'default'\n      }\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"start\"`. */\n    labelPlacementStart: {\n      flexDirection: 'row-reverse',\n      marginLeft: 16,\n      // used for row presentation of radio/checkbox\n      marginRight: -11\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"top\"`. */\n    labelPlacementTop: {\n      flexDirection: 'column-reverse',\n      marginLeft: 16\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"bottom\"`. */\n    labelPlacementBottom: {\n      flexDirection: 'column',\n      marginLeft: 16\n    },\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the label's Typography component. */\n    label: {\n      '&$disabled': {\n        color: theme.palette.text.disabled\n      }\n    }\n  };\n};\n/**\n * Drop in replacement of the `Radio`, `Switch` and `Checkbox` component.\n * Use this component if you want to display an extra label.\n */\n\nvar FormControlLabel = React.forwardRef(function FormControlLabel(props, ref) {\n  var checked = props.checked,\n      classes = props.classes,\n      className = props.className,\n      control = props.control,\n      disabledProp = props.disabled,\n      inputRef = props.inputRef,\n      label = props.label,\n      _props$labelPlacement = props.labelPlacement,\n      labelPlacement = _props$labelPlacement === void 0 ? 'end' : _props$labelPlacement,\n      name = props.name,\n      onChange = props.onChange,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"checked\", \"classes\", \"className\", \"control\", \"disabled\", \"inputRef\", \"label\", \"labelPlacement\", \"name\", \"onChange\", \"value\"]);\n\n  var muiFormControl = useFormControl();\n  var disabled = disabledProp;\n\n  if (typeof disabled === 'undefined' && typeof control.props.disabled !== 'undefined') {\n    disabled = control.props.disabled;\n  }\n\n  if (typeof disabled === 'undefined' && muiFormControl) {\n    disabled = muiFormControl.disabled;\n  }\n\n  var controlProps = {\n    disabled: disabled\n  };\n  ['checked', 'name', 'onChange', 'value', 'inputRef'].forEach(function (key) {\n    if (typeof control.props[key] === 'undefined' && typeof props[key] !== 'undefined') {\n      controlProps[key] = props[key];\n    }\n  });\n  return (/*#__PURE__*/React.createElement(\"label\", _extends({\n      className: clsx(classes.root, className, labelPlacement !== 'end' && classes[\"labelPlacement\".concat(capitalize(labelPlacement))], disabled && classes.disabled),\n      ref: ref\n    }, other), React.cloneElement(control, controlProps), /*#__PURE__*/React.createElement(Typography, {\n      component: \"span\",\n      className: clsx(classes.label, disabled && classes.disabled)\n    }, label))\n  );\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControlLabel.propTypes = {\n  /**\n   * If `true`, the component appears selected.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * A control element. For instance, it can be be a `Radio`, a `Switch` or a `Checkbox`.\n   */\n  control: PropTypes.element,\n\n  /**\n   * If `true`, the control will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * The text to be used in an enclosing label element.\n   */\n  label: PropTypes.node,\n\n  /**\n   * The position of the label.\n   */\n  labelPlacement: PropTypes.oneOf(['end', 'start', 'top', 'bottom']),\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormControlLabel'\n})(FormControlLabel);","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport { fade } from '../styles/colorManipulator';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `indeterminate={true}`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = /*#__PURE__*/React.createElement(CheckBoxIcon, null);\nvar defaultIcon = /*#__PURE__*/React.createElement(CheckBoxOutlineBlankIcon, null);\nvar defaultIndeterminateIcon = /*#__PURE__*/React.createElement(IndeterminateCheckBoxIcon, null);\nvar Checkbox = React.forwardRef(function Checkbox(props, ref) {\n  var _props$checkedIcon = props.checkedIcon,\n      checkedIcon = _props$checkedIcon === void 0 ? defaultCheckedIcon : _props$checkedIcon,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$icon = props.icon,\n      icon = _props$icon === void 0 ? defaultIcon : _props$icon,\n      _props$indeterminate = props.indeterminate,\n      indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,\n      _props$indeterminateI = props.indeterminateIcon,\n      indeterminateIcon = _props$indeterminateI === void 0 ? defaultIndeterminateIcon : _props$indeterminateI,\n      inputProps = props.inputProps,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"checkedIcon\", \"classes\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"]);\n\n  return (/*#__PURE__*/React.createElement(SwitchBase, _extends({\n      type: \"checkbox\",\n      classes: {\n        root: clsx(classes.root, classes[\"color\".concat(capitalize(color))], indeterminate && classes.indeterminate),\n        checked: classes.checked,\n        disabled: classes.disabled\n      },\n      color: color,\n      inputProps: _extends({\n        'data-indeterminate': indeterminate\n      }, inputProps),\n      icon: React.cloneElement(indeterminate ? indeterminateIcon : icon, {\n        fontSize: size === 'small' ? 'small' : 'default'\n      }),\n      checkedIcon: React.cloneElement(indeterminate ? indeterminateIcon : checkedIcon, {\n        fontSize: size === 'small' ? 'small' : 'default'\n      }),\n      ref: ref\n    }, other))\n  );\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes = {\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary', 'default']),\n\n  /**\n   * If `true`, the checkbox will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the input.\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the checkbox.\n   * `small` is equivalent to the dense checkbox styling.\n   */\n  size: PropTypes.oneOf(['small', 'medium']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCheckbox'\n})(Checkbox);","import React, { useState } from 'react';\nimport { FormControlLabel, Checkbox, FormGroup } from '@material-ui/core';\n\nexport default function Sidebar({ checkboxes }) {\n  const [state, setState] = useState<any>({});\n  return (\n    <FormGroup row>\n      {(checkboxes || []).map((checkbox, index) => {\n        const key = `checkbox-${index}`;\n        return (\n          <FormControlLabel\n            key={key}\n            control={\n              <Checkbox\n                checked={state.checkedB}\n                onChange={(e) => {\n                  console.log('bing');\n                  setState({ ...state, [key]: e.target.checked });\n                }}\n                name={checkbox.value}\n                color=\"primary\"\n              />\n            }\n            label={`${checkbox.value} (${checkbox.count})`}\n          />\n        );\n      })}\n    </FormGroup>\n  );\n}\n"],"sourceRoot":""}