{"version":3,"sources":["webpack:///./node_modules/gatsby-plugin-mdx/index.js","webpack:///./node_modules/gatsby-theme-notes/src/components/footer.js","webpack:///./node_modules/gatsby-theme-notes/src/components/layout.js","webpack:///./node_modules/gatsby-plugin-mdx/mdx-renderer.js","webpack:///./node_modules/gatsby-theme-notes/src/components/note.js","webpack:///./node_modules/gatsby-theme-notes/src/templates/note.js"],"names":["MDXRenderer","require","module","css","mt","pt","Date","href","props","styles","boxSizing","body","margin","fontFamily","React","mdx","useMDXScope","scope","children","mdxScope","End","fullScope","keys","Object","values","key","fn","title"],"mappings":"iFAMA,IAAMA,EAAcC,EAApB,QAEAC,UAAiB,CACfF,YAAaA,I,mFCQf,EAde,kBACb,sBACEG,IAAKA,YAAI,CACPC,GADO,EAEPC,GAAI,KAHR,MAMK,IAAIC,MANT,iCAQE,iBAAGC,KAAK,4BARV,kBADa,MCGA,aAAAC,GAAK,OAClB,8BACE,iBACEC,OAAQN,YAAI,CACV,IAAK,CACHO,UAAU,cAEZC,KAAM,CACJC,OADI,EAEJC,WAAW,YAIjB,qBACE,qBACE,qBACGL,EADH,SAEE,cAjBU,Y,woBCNpB,IAAMM,EAAQb,EAAd,QACQc,EAAQd,EAAQ,QAAhBc,IACAC,EAAgBf,EAAQ,QAAxBe,YAERd,UAAiB,SAAqB,GAIlC,IAHFe,EAGC,EAHDA,MACAC,EAEC,EAFDA,SACGV,EACF,0BACKW,EAAWH,EADhB,GAIKI,EAAMN,EAAA,SAAc,WACxB,MACE,OAAO,KAGT,IAAMO,EAAS,GAGbP,MAHa,EAIbC,OAJF,GAQMO,EAAOC,YAAb,GACMC,EAASF,EAAA,KAAS,SAAAG,GAAG,OAAIJ,EAAJ,MAG3B,OAFQ,mCAAR,KAEOK,2BAAP,OACC,CAACR,EAlBJ,IAoBA,OAAOJ,uBAAP,M,yGCbF,EAdiB,SAAC,GAAD,aAELH,EAFK,YAIKgB,EAJL,0BAOZnB,EAPY,+BASf,kCAAmBmB,MAAOA,IACxB,+BAVa,KCDjB","file":"component---node-modules-gatsby-theme-notes-src-templates-note-js-51c66cec0c5994ad2d90.js","sourcesContent":["/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","import React from \"react\"\nimport { css } from \"theme-ui\"\n\nconst Footer = () => (\n  <footer\n    css={css({\n      mt: 4,\n      pt: 3,\n    })}\n  >\n    Â© {new Date().getFullYear()}, Powered by\n    {` `}\n    <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n    {` `}&bull;{` `}\n  </footer>\n)\n\nexport default Footer\n","import React from \"react\"\nimport { Global } from \"@emotion/core\"\nimport { css } from \"theme-ui\"\nimport { Layout, Main, Container } from \"theme-ui\"\nimport Footer from \"./footer\"\n\nexport default props => (\n  <>\n    <Global\n      styles={css({\n        \"*\": {\n          boxSizing: `border-box`,\n        },\n        body: {\n          margin: 0,\n          fontFamily: `body`,\n        },\n      })}\n    />\n    <Layout>\n      <Main>\n        <Container>\n          {props.children}\n          <Footer />\n        </Container>\n      </Main>\n    </Layout>\n  </>\n)\n","const React = require(`react`)\nconst { mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  children,\n  ...props\n}) {\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, {...props })\n}\n","import React from \"react\"\nimport { MDXRenderer } from \"gatsby-plugin-mdx\"\n\nimport Layout from \"./layout\"\n\nconst WikiPage = ({\n  data: {\n    note: { body },\n    site: {\n      siteMetadata: { title },\n    },\n  },\n  ...props\n}) => (\n  <Layout {...props} title={title}>\n    <MDXRenderer>{body}</MDXRenderer>\n  </Layout>\n)\n\nexport default WikiPage\n","import { graphql } from \"gatsby\"\n\nimport Note from \"../components/note\"\n\nexport default Note\n\nexport const pageQuery = graphql`\n  query($id: String!) {\n    note: mdx(id: { eq: $id }) {\n      id\n      body\n    }\n    site: site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n"],"sourceRoot":""}