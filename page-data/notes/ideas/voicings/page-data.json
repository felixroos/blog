{"componentChunkName":"component---node-modules-gatsby-theme-notes-src-templates-note-js","path":"/notes/ideas/voicings","result":{"data":{"note":{"id":"bbe71347-887f-5f95-a3c6-7076336345dc","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"modeling-musical-voicings\"\n  }, \"Modeling Musical Voicings\"), mdx(\"p\", null, \"We can now try to model the permutation of musical voicings to the ones we developed with the urn model.\"), mdx(\"h3\", {\n    \"id\": \"using-pitch-classes\"\n  }, \"Using pitch classes\"), mdx(\"p\", null, \"If we use notes without octaves (pitch classes):\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Order is important\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Each pitch can be picked multiple times\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"we pick a subset of the chord notes, but at least all notes that define the chord\")), mdx(\"p\", null, \"Problem:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"we cannot generate voicings with intervals higher than an octave between notes\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"we cannot take range specific considerations into the search tree (e.g. low interval limits)\")), mdx(\"h3\", {\n    \"id\": \"using-notes-with-octave-numbers\"\n  }, \"Using notes with octave numbers\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Order is not important\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Each note can only be picked once\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"we pick a subset of the chord notes, but at least all notes that define the chord\")), mdx(\"h3\", {\n    \"id\": \"required-vs-optional-pitches\"\n  }, \"Required vs optional pitches\"), mdx(\"p\", null, \"If we want to properly voice a chord symbol, there are\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"some pitches that have to be played aka required pitches\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"some pitches that can be omitted without changing the chord quality\")), mdx(\"p\", null, \"For example, a C7 chord:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"required pitches: E and Bb\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"optional pitches: C and G\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"one could argue that is C is also required. That depends on what we want to achieve\")));\n}\n;\nMDXContent.isMDXComponent = true;"},"site":{"siteMetadata":{"title":"Loophole Letters"}}},"pageContext":{"id":"bbe71347-887f-5f95-a3c6-7076336345dc","parent":{"name":"voicings","base":"voicings.md","relativePath":"ideas/voicings.md","sourceInstanceName":"content/notes"},"title":"voicings"}},"staticQueryHashes":[]}