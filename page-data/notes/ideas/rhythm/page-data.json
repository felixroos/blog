{"componentChunkName":"component---node-modules-gatsby-theme-notes-src-templates-note-js","path":"/notes/ideas/rhythm","result":{"data":{"note":{"id":"0e84892f-c329-5d57-8572-43f98c6a08db","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"moved from notes\"), mdx(\"h1\", {\n    \"id\": \"rhythm\"\n  }, \"Rhythm\"), mdx(\"p\", null, \"This note deals with handling rhythm.\"), mdx(\"h2\", {\n    \"id\": \"flat-rhythmic-notation\"\n  }, \"Flat rhythmic notation\"), mdx(\"p\", null, \"The most obvious way to notate rhythmic notes is this:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"C8 D8 E4 D8 E8 F4\\n\")), mdx(\"p\", null, \"The number following the note name expresses the length of the note as fraction to a whole note.\"), mdx(\"p\", null, \"A simplification of above would be to set a global fraction and only notate deviations in relation to it:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"L:1/8\\nCD E2 DE F2\\n\")), mdx(\"p\", null, \"or \"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"L:1/4\\nC2D2 E D2E2 F\\n\")), mdx(\"p\", null, \"This is how it is done in abc notation. It is especially useful when having dealing with music that has homogeneous rhythms.\"), mdx(\"h3\", {\n    \"id\": \"playback\"\n  }, \"Playback\"), mdx(\"p\", null, \"In Tone.js, the above would be played like that:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"var synth = new Tone.Synth().toMaster()\\nvar part = new Tone.Part((time, event) => {\\n    synth.triggerAttackRelease(event.note, event.dur, time)\\n}, [\\n    { time : '0', note : 'C4', dur : '8n'},\\n    { time : '0:0.5', note : 'D4', dur : '8n'},\\n    { time : '0:1', note : 'E4', dur : '4n'},\\n    { time : '0:2', note : 'D4', dur : '8n'},\\n    { time : '0:2.5', note : 'E4', dur : '8n'},\\n    { time : '0:3', note : 'F4', dur : '4n'},    \\n    ]);\\npart.start(0)\\nTone.Transport.start();\\n\")), mdx(\"p\", null, \"Maybe the time could be expressed better, see \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/Tonejs/Tone.js/wiki/Time\"\n  }, \"Time\"), \".\"), mdx(\"h2\", {\n    \"id\": \"nested-rhythmic-notation\"\n  }, \"Nested rhythmic notation\"), mdx(\"p\", null, \"Another way to express rhythm is by using nesting:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"[CD] E [DE] F\\n\")), mdx(\"p\", null, \"This is approach is used e.g. by \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://tidalcycles.org/index.php/Tutorial\"\n  }, \"Tidal Cycles\"), \".\"), mdx(\"p\", null, \"The clever thing is: no numbers are needed to express relations, just groups. It is also visually more clear than the flat approach.\"), mdx(\"p\", null, \"As also used by Tidal, groupings can also be expressed by dots:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"CD.E.DE.F\\n\")), mdx(\"h3\", {\n    \"id\": \"playback-1\"\n  }, \"Playback\"), mdx(\"p\", null, \"Tone.js already has an easy solution to play patterns like that:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"var synth = new Tone.Synth().toMaster()\\nvar seq = new Tone.Sequence(function(time, note){\\n    synth.triggerAttackRelease(note, '8n', time)    \\n}, [['C4','D4'],'E4',['D4','E4'],'F4'], \\\"1m\\\");\\n\")), mdx(\"h2\", {\n    \"id\": \"comparison\"\n  }, \"Comparison\"), mdx(\"p\", null, \"Let\\u2019s examine the two approaches more deeply, regarding:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Note Duration\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Syncopation\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Odd Rhythms\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Rests\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Editing\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Multiple Notes\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Articulation\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Rendering\")), mdx(\"h2\", {\n    \"id\": \"complex-example\"\n  }, \"Complex Example\"), mdx(\"p\", null, \"Lets use the bebop tune \\u201CBlues for Alice\\u201D as a more complex example:\"), mdx(\"h3\", {\n    \"id\": \"in-abc-notation\"\n  }, \"in \", mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"https://abcjs.net/abcjs-editor.html\"\n  }, \"abc notation\"), \":\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"T: Blues for Alice\\nM: 4/4\\nL: 1/8\\n| f2 cA e2 cA | deBd _d_BG_A |\\n| A2 FD GAFE | (3_EG_B d_d z F (3FGF |\\n| c2 _BF _A_B, z_A | _e_d _B=B cF GA- |\\n| A2 EC D2 z^c- | ^c2 B^F ^A2 z^G | \\n| (3G2f2f2 fd _BG | AG c_B _e2 z c- |\\n| c2 AF G2 zd- |d2 _BD A2 z2 |\\n\")), mdx(\"h3\", {\n    \"id\": \"in-nested-notation\"\n  }, \"in nested notation:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"T: Blues for Alice\\nM: 4/4\\n|\\xA0f.cA.e.cA | deBd _D_BG_A | \\n| A.FD.GA.FE | BG_B.d_d.~F.FGF |\\n| c._BF._A_B,.~_A | _e_d._BB.cF.GA |\\n| %.EC.D.~^c | %.B^F.^A.~^G | \\n| Gff.fd_BG | AG.c_B._e.~c |\\n| %.AF.G.~d | %._BD.A.~ |\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"rests: ~\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"hold notes: %\")), mdx(\"h2\", {\n    \"id\": \"optimization\"\n  }, \"optimization\"), mdx(\"p\", null, \"confusing symbols:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"flats and sharps should be written normally (_b => bb, ^c => c# )\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"this requires putting spaces between every note\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"=> increases readability\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"uppercase/lowercase is bad\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"use relative distances\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"most songs rarely move in large intervals\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"=> prepend direction sign if distance is > perfect 4th\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"move up = \\u201D+\\u201D, move down = \\u201D-\\u201D\")))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"T: Blues for Alice\\nM: 4/4\\n|\\xA0f . c a . +e .c a | d e b d . db bb g ab | \\n| a . f d . g a . f e | eb g bb . d db . ~ -f . f g f |\\n| +c . bb f . ab -bb . ~ +ab | +eb db . bb b . c -f . g a |\\n| % . e c . d . ~ +c# | % . b f# . a# . ~ g# | \\n| g +f f . f d bb g | a g . c bb . eb . ~ c |\\n| % . a f . g . ~ ^d | % . bb d . a . ~ |\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"},"site":{"siteMetadata":{"title":"Loophole Letters"}}},"pageContext":{"id":"0e84892f-c329-5d57-8572-43f98c6a08db","parent":{"name":"rhythm","base":"rhythm.md","relativePath":"ideas/rhythm.md","sourceInstanceName":"content/notes"},"title":"rhythm"}},"staticQueryHashes":[]}