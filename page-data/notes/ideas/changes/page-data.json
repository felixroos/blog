{"componentChunkName":"component---node-modules-gatsby-theme-notes-src-templates-note-js","path":"/notes/ideas/changes","result":{"data":{"note":{"id":"f1c940ab-797a-50b5-84b2-dab603ad44a9","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Moved from harmonical > see harmonical for source code\"), mdx(\"h1\", {\n    \"id\": \"changes\"\n  }, \"Changes\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Input: string[] // chords\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Output: Change[]\")), mdx(\"h2\", {\n    \"id\": \"change\"\n  }, \"Change\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\"\n  }, \"export interface Change {\\n  symbols: string[]; // e.g. ['-', '7']\\n  interval: number; // e.g. 4P\\n  roots: string[]; // which start roots appear?\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"example-how-high-the-moon\"\n  }, \"Example: How High the Moon\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\"\n  }, \"analyzeChanges([\\n  'A^7',\\n  '%',\\n  'A-7',\\n  'D7',\\n  'G^7',\\n  '%',\\n  'G-7',\\n  'C7',\\n  'F^7',\\n  'B-7b5',\\n  'E7b9',\\n  'A-7',\\n  'B-7b5',\\n  'E7b9',\\n  'A^7',\\n  'F#-7',\\n  'B-7',\\n  'E7',\\n  'A^7',\\n  '%',\\n  'A-7',\\n  'D7',\\n  'G^7',\\n  '%',\\n  'G-7',\\n  'C7',\\n  'F^7',\\n  'B-7b5',\\n  'E7b9',\\n  'A^7',\\n  'B-7',\\n  'E-7',\\n  'C#-7',\\n  'F#7',\\n  'B-7',\\n  'E7',\\n  'A6',\\n  'B-7',\\n  'E7'\\n]);\\n\")), mdx(\"p\", null, \"returns\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\"\n  }, \"[\\n  {\\n    symbols: ['^7', '-7'],\\n    interval: '1P', // major to minor\\n    roots: ['A', 'G', 'A', 'G'],\\n    beats: [8, 8, 8, 8]\\n    count: 4,\\n    uniqueCount: 2\\n  },\\n  {\\n    symbols: ['-7', '7'],\\n    interval: '4P', // major II V\\n    roots: ['A', 'G', 'B', 'A', 'G', 'B', 'C#', 'B', 'B'],\\n    beats: [4, 4, 4, 4, 4, 2, 2, 2, 2]\\n    count: 9,\\n    uniqueCount: 4\\n  },\\n  {\\n    symbols: ['7', '^7'],\\n    interval: '4P' // major V I\\n    roots: ['D', 'C', 'E', 'D', 'C', 'E', 'E'],\\n    beats: [4, 4, 4, 4, 4, 2, 2]\\n    count: 7,  // last one is from form end to start\\n    uniqueCount: 3\\n  },\\n  {\\n    symbols: ['-7b5', '7b9'],\\n    interval: '4P',\\n    roots: ['B', 'B', 'B'] // harmonic minor II V\\n    beats: [2, 2, 2]\\n    count: 3,\\n    uniqueCount: 1\\n  },\\n  {\\n    symbols: ['7b9', '-7'],\\n    interval: '4P', // harmonic minor V I\\n    roots: ['E'],\\n    count: 1,\\n    uniqueCount: 1\\n  },\\n  {\\n    symbols: ['-7', '-7b5'],\\n    interval: '2M', // minor I to minor II\\n    roots: ['A'],\\n    count: 1,\\n    uniqueCount: 1\\n  },\\n  {\\n    symbols: ['7b9', '^7'],\\n    interval: '4P' // minor V to major I\\n    roots: ['E', 'E'],\\n    count: 2,\\n    uniqueCount: 1\\n  },\\n  {\\n    symbols: ['^7', '-7'],\\n    interval: '-3m' // I^ to VI-\\n    roots:\\xA0['A'],\\n    count: 1,\\n    uniqueCount: 1\\n  },\\n  {\\n    symbols: ['-7', '-7'],\\n    interval: '4P', // VI- to II- (minor )\\n    roots: ['F#'],\\n    count: 1,\\n    uniqueCount: 1\\n  },\\n  {\\n    symbols: ['7', '-7'],\\n    interval: '-3m', // e.g. V7 > II- whole step up\\n    roots: ['E'],\\n    count: 1,\\n    uniqueCount: 1\\n  },\\n  {\\n    symbols: ['7', '-7'],\\n    interval: '4P', // major V to minor I\\n    roots: ['F#'],\\n    count: 1,\\n    uniqueCount: 1\\n  },\\n  {\\n    symbols: ['7', '6'],\\n    interval: '4P' // major V I6\\n    roots: ['E'],\\n    count: 1,\\n    uniqueCount: 1\\n  },\\n  {\\n    symbols: ['6', '-7'],\\n    interval: '2M' // major I6 to II-\\n    roots: ['A'],\\n    count: 1,\\n    uniqueCount: 1\\n  },\\n];\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"total: 33\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"avg 1 chord per bar => 32 bars total + change from last bar to first\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"unique: 19\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"change types: 13\")), mdx(\"h2\", {\n    \"id\": \"example-blue-bossa\"\n  }, \"Example: Blue Bossa\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\"\n  }, \"analyzeChanges([\\n  'D-7',\\n  '%', //X\\n  'G-7',\\n  '%', //X\\n  'E-7b5', //X\\n  'A7b9', //X\\n  'D-7',\\n  '%', //X\\n  'F-7', //X\\n  'Bb7', //X\\n  'Eb^7',\\n  '%', //X\\n  'E-7b5', //X\\n  'A7b9', //X\\n  'D-7',\\n  'E-7b5', //X\\n  'A7b9', //X\\n  'D-7' // form starts again\\n]);\\n\")), mdx(\"p\", null, \"yields\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\"\n  }, \"[\\n  {\\n    symbols: ['-7', '-7'],\\n    interval: '4P' // minor quintfall\\n    roots: ['D'],\\n    count: 1,\\n    uniqueCount: 1\\n  },\\n  {\\n    symbols: ['-7', '-7b5'],\\n    interval: '-3m',\\n    roots: ['G']\\n    count: 1,\\n    uniqueCount: 1\\n  },\\n  {\\n    symbols: ['-7b5', '7b9'],\\n    interval: '4P', // harmonic minor II V\\n    roots: ['E', 'E', 'E'],\\n    count: 3,\\n    uniqueCount: 1\\n  },\\n  {\\n    symbols: ['7b9', '-7'],\\n    interval: '4P', // harmonic minor V I\\n    roots: ['A', 'A', 'A'],\\n    count: 3,\\n    uniqueCount: 1\\n  },\\n  {\\n    symbols: ['-7', '-7'],\\n    interval: '3m' // blue bossa trademark\\n    roots: ['D'],\\n    count: 1,\\n    uniqueCount: 1\\n  },\\n  {\\n    symbols: ['-7', '7'],\\n    interval: '4P', // major II V\\n    roots: ['F'],\\n    count: 1,\\n    uniqueCount: 1\\n  },\\n  {\\n    symbols: ['7', '^7'],\\n    interval: '4P', // major V I\\n    roots: ['Bb'],\\n    count: 1,\\n    uniqueCount: 1\\n  },\\n  {\\n    symbols: ['^7', '-7b5'],\\n    interval: '-2m', // blue bossa trademark\\n    roots: ['Eb'],\\n    count: 1,\\n    uniqueCount: 1\\n  },\\n  {\\n    symbols: ['-7', '-7b5'],\\n    interval: '2M', // minor I II\\n    roots: ['D'],\\n    count: 1,\\n    uniqueCount: 1\\n  },\\n];\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"total: 13\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"unique: 9\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"types: 9\")), mdx(\"h2\", {\n    \"id\": \"use-cases\"\n  }, \"use cases\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"analyze huge set of leadsheets > ireal 1350 set\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"find out which changes are the most common\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"find out changes that are really special\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"find out changes that are NEVER used\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"sort tunes\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"amount of unique changes\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"amount of total changes\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"amount of change types\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"ability => unique changes per minute (if you know tempo)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"diversity => change types per minute (if you know tempo)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"activity => changes per minute (if you know tempo)\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"compare tunes\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"number of shared unique changes\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"number of unshared unique changes\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"percent of shared changed\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"search tunes that contain specific changes\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"which tunes can you play? > select\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"show tunes that you can also play (no new changes)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"show tunes that could learn to extend your skills\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"some new similar changes (similar chord types but extended)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"same known changes but in different keys\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"known changes in faster tempos\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"some new changes (new symbol/interval combinations)\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"show tunes that are hard to learn for you\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"too many new changes / new keys\"))))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"compile set of changes that should be played by paul\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"use most common changes in most common keys\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"generate random sequences\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"generate sequenes that pull the hands up\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"generate sequences that pull the hands down\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"record what is played\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"analyze voice leading\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"generate library for most used voice transitions\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"show change types below leadsheet > click marks all places\\nTBD: integrate harmonic rhythm into the game\")));\n}\n;\nMDXContent.isMDXComponent = true;"},"site":{"siteMetadata":{"title":"Loophole Letters"}}},"pageContext":{"id":"f1c940ab-797a-50b5-84b2-dab603ad44a9","parent":{"name":"changes","base":"changes.md","relativePath":"ideas/changes.md","sourceInstanceName":"content/notes"},"title":"changes"}},"staticQueryHashes":[]}