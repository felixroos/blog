{"componentChunkName":"component---node-modules-gatsby-theme-notes-src-templates-note-js","path":"/notes/ideas/eartrainer","result":{"data":{"note":{"id":"78ad11e9-ab3c-5bc8-a121-4fe00c3eb5d0","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"taken from notes\"), mdx(\"h1\", {\n    \"id\": \"ear-trainer\"\n  }, \"Ear Trainer\"), mdx(\"p\", null, \"In this file, I collect ideas about a way to implement ear training with jazzband.\"), mdx(\"h2\", {\n    \"id\": \"general-ear-training-disciplines\"\n  }, \"General Ear Training Disciplines\"), mdx(\"h3\", {\n    \"id\": \"interval-recognition\"\n  }, \"Interval Recognition\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"harmonic or Sequential\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"also more than one possible\")), mdx(\"h2\", {\n    \"id\": \"chord-recognition\"\n  }, \"Chord Recognition\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"harmonic or sequential or permutation\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"chord progressions\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"voicing recognition\")), mdx(\"h2\", {\n    \"id\": \"scale-recognition\"\n  }, \"Scale Recognition\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"sequential or permutation or chord/interval progression\")), mdx(\"h2\", {\n    \"id\": \"restricting-available-questionsanswers\"\n  }, \"Restricting available questions/answers\"), mdx(\"p\", null, \"To restrict the available symbols, the ear trainer could just use the symbols defined in the current tune.\"), mdx(\"h3\", {\n    \"id\": \"selecting-tunes-to-train-with\"\n  }, \"Selecting Tunes to train with\"), mdx(\"p\", null, \"To have a better control over the trained material, be able to filter/sort all tunes by:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"using symbols: only tunes using the given symbols will be returned: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"['-7', '7', '^7']\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"using progression: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"['II-7','V7','I^7']\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"using only given chords \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"['C^7','D-7','G7']\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"using only given relative chords \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"['I^7','II-7','V7']\"))), mdx(\"p\", null, \"Another possibility would be add chord progressions that are optimized for ear training purposes.\"), mdx(\"h3\", {\n    \"id\": \"dictation-mode\"\n  }, \"Dictation Mode\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Select Tune\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"The snippet will obfuscate all chords with a question mark.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"The snippet will be played, either in tempo or one chord after the other via \\u201Cplay next\\u201D button.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"The user has to replace the question marks with the actual chords used.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Pressing \\u201CFinish\\u201D will check the answer and tell the user\")), mdx(\"p\", null, \"Instead of just playing the chords harmonically, other play variants are possible:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"play bass note + one random chord note > guess degree, interval or actual note\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"could be a guide tone line\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"guess top note/degree/interval\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"guess whole voicing degree structure e.g. 7,9,3,13 or intervals\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"arpegiate chord notes in arbitrary order\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"play chords with a drone organ\")), mdx(\"h3\", {\n    \"id\": \"random-mode\"\n  }, \"Random Mode\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Select Tune.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"All chords are visible\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"A random chord will be played via \\u201Cplay random\\u201D button. The played state is not shown.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"The user has to click on the chord that was played.\")), mdx(\"p\", null, \"Play Variants:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Extract all different chords from the tune.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Extract all different chord symbols from the tune.\")));\n}\n;\nMDXContent.isMDXComponent = true;"},"site":{"siteMetadata":{"title":"Loophole Letters"}}},"pageContext":{"id":"78ad11e9-ab3c-5bc8-a121-4fe00c3eb5d0","parent":{"name":"eartrainer","base":"eartrainer.md","relativePath":"ideas/eartrainer.md","sourceInstanceName":"content/notes"},"title":"eartrainer"}},"staticQueryHashes":[]}