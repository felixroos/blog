{"componentChunkName":"component---node-modules-gatsby-theme-notes-src-templates-note-js","path":"/notes/ideas/snippets","result":{"data":{"note":{"id":"1ca7858c-5b73-58b8-a3cb-67ffbab6fab6","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"snippets\"\n  }, \"Snippets\"), mdx(\"p\", null, \"A Snippet is a textual representation of a Leadsheet, meaning chords and/or melody of a tune/song.\"), mdx(\"h2\", {\n    \"id\": \"design-goals\"\n  }, \"Design Goals\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Readability\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Minimal keystrokes\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Flexibility\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Musician friendly\")), mdx(\"h2\", {\n    \"id\": \"example-beautiful-love\"\n  }, \"Example: Beautiful Love\"), mdx(\"p\", null, \"Here is an example of the chords of Lullaby of Birdland by George Shearing:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-txt\"\n  }, \"|: F- Dh7    |  G7 C7     |  F-          |  Bb-7 Eb7    |\\n|  C-7 F-7   |  Bb-7 Eb7  |1 Ab^7        |  Gh7 C7b9   :|\\n                          |2 Ab^7 Eb7    |  Ab^7        |\\n|  Ch7 F7b9  |  Bb-7      |  Bb-7 Eb7b9  |  Ab^7        |\\n|  Ch7 F7b9  |  Bb-7      |  Bb-7 Eb7b9  |  Ab^7 C7b9   |\\n|  F- Dh7    |  G7 C7     |  F-          |  Bb-7 Eb7    |\\n|  C-7 F-7   |  Bb-7 Eb7  |  Ab^7 Eb7    |  Ab^7 Gh C7  |\\n\")), mdx(\"p\", null, \"The following characters are showcased:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"| barlines\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \": repeat signs\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"1,2 .. houses\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"chord symbols: - h7 7 -7 ^7 7b9 h\")), mdx(\"p\", null, \"You can also see that the second house has a offset to be below the first house. This syncs the reading position with the harmonic rhythm.\"), mdx(\"h2\", {\n    \"id\": \"control-flow\"\n  }, \"Control Flow\"), mdx(\"p\", null, \"The term \\u201CControl Flow\\u201D means all signs that control the flow of the musical piece. Following signs are common to musical sheets:\"), mdx(\"h3\", {\n    \"id\": \"repeat-signs\"\n  }, \"Repeat signs\"), mdx(\"p\", null, \"When hitting this sign at the end of a bar, jump back to latest bar with this sign at the beginning (or beginning), ignore next time:\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"| A | B :|\"), \" => \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"| A | B | A | B |\")), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"|: A | B :|\"), \" => \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"| A | B | A | B |\")), mdx(\"h3\", {\n    \"id\": \"houses\"\n  }, \"Houses\"), mdx(\"p\", null, \"Inside repeat signs. Play one house at a time, step forward sequentially each repeat:\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"|: A | 1 B :| 2 C |\"), \" => \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"| A | B | A | C |\")), mdx(\"h3\", {\n    \"id\": \"dc--da-capo\"\n  }, \"DC = Da Capo\"), mdx(\"p\", null, \"Jump back to beginning:\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"| A (DC) | B |\"), \" => \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"| A | A | B |\")), mdx(\"h3\", {\n    \"id\": \"dc--fine--da-capo-al-fine\"\n  }, \"DC + Fine = Da Capo al Fine\"), mdx(\"p\", null, \"Finishes the piece, only when a DS/DC has been hit before.\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"| A (Fine) | B (DC) |\"), \" => \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"| A | B | A |\")), mdx(\"p\", null, \"Short:\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"| A (F) | B (DC) |\"), \" => \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"| A | B | A |\")), mdx(\"h3\", {\n    \"id\": \"dc--coda--da-capo-al-coda\"\n  }, \"DC + Coda = Da Capo al Coda\"), mdx(\"p\", null, \"Finishes the piece, only when a DS/DC has been hit before.\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"| A (ToCoda) | B (DC) | (Coda) C |\"), \" => \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"| A | B | A | C |\")), mdx(\"p\", null, \"Short:\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"| A (2Q) | B (DC) | (Q) C |\"), \" => \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"| A | B | A | C |\")), mdx(\"h3\", {\n    \"id\": \"ds--dal-segno\"\n  }, \"DS = Dal Segno\"), mdx(\"p\", null, \"Jump back to Segno (S).\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"| A | (Segno) B (DS) | C |\"), \" => \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"| A | B | B | C |\")), mdx(\"p\", null, \"Short:\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"| A | (S) B (DS) | C |\"), \" => \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"| A | B | B | C |\")), mdx(\"h3\", {\n    \"id\": \"ds--fine--dal-segno-al-fine\"\n  }, \"DS + Fine = Dal Segno al Fine\"), mdx(\"p\", null, \"Jump back to Segno. Stop playing when hitting Fine:\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"| A | (Segno) B (Fine) | C (DS) |\"), \" => \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"| A | B | C | B |\")), mdx(\"p\", null, \"Short:\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"| A | (S) B (F) | C (DS) |\"), \" => \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"| A | B | C | B |\")), mdx(\"h3\", {\n    \"id\": \"ds--coda--dal-segno-al-coda\"\n  }, \"DS + Coda = Dal Segno al Coda\"), mdx(\"p\", null, \"Jump back to Segno. When hitting ToCoda sign, jump to the Bar with the Coda sign.\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"| A | (S) B (ToCoda) | C (DS) | (Coda) D |\"), \" => \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"| A | B | C | B | D |\")), mdx(\"p\", null, \"Short:\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"| A | (S) B (2Q) | C (DS) | (Q) D |\"), \" => \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"| A | B | C | B | D |\")), mdx(\"h2\", {\n    \"id\": \"real-world-control-flow\"\n  }, \"Real World Control Flow\"), mdx(\"p\", null, \"Blue in Green\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-txt\"\n  }, \"|  G-6      |  A7#9  |  D-7 Db7  |  C-7 F7  |\\n|  Bb^7#11  |  A7#9  |  D-6      |  E7b13   |\\n|  A-7      |  D-7   |  (Q) G-6  |  A7#9    |\\n|  D-6      |  D-6   |\\n\")), mdx(\"p\", null, \"Beautiful Love\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-txt\"\n  }, \"(A)\\n|: Eh7    |  A7b9         |  D-   |  D-        |\\n|  G-7    |  C7           |  F^7  |  Eh7 A7b9  |\\n(B)\\n|1 D-     |  G-7          |  Bb7  |  A7b9      |\\n|  D-     |  G7#11        |  Eh7  |  A7b9     :|\\n(C)\\n|2 D-     |  G-7          |  Bb7  |  A7b9      |\\n|  D- B7  |  Bb7#11 A7b9  |  D-   |  D-        |\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"},"site":{"siteMetadata":{"title":"Loophole Letters"}}},"pageContext":{"id":"1ca7858c-5b73-58b8-a3cb-67ffbab6fab6","parent":{"name":"snippets","base":"snippets.md","relativePath":"ideas/snippets.md","sourceInstanceName":"content/notes"},"title":"snippets"}},"staticQueryHashes":[]}