{"componentChunkName":"component---node-modules-gatsby-theme-notes-src-templates-note-js","path":"/notes/components/TestMDX","result":{"data":{"note":{"id":"7f332f24-6324-5ebf-a4a8-87ab537a5512","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"color\"\n  }, \"Color\"), mdx(\"p\", null, \"This is a color, using css in JS via JSX:\"), mdx(\"div\", {\n    style: {\n      background: 'steelblue',\n      width: 20,\n      height: 40,\n      borderRadius: 30,\n      margin: 10\n    }\n  }), mdx(\"p\", null, \"These are multiple colors using JSX:\"), mdx(\"div\", {\n    style: {\n      display: 'flex'\n    }\n  }, Array.from({\n    length: 10\n  }, function (_, i) {\n    return mdx(\"div\", {\n      style: {\n        background: interpolateSinebow(i / 10),\n        width: 20,\n        height: 40,\n        borderRadius: 30,\n        margin: 10\n      }\n    });\n  })), mdx(\"h2\", {\n    \"id\": \"state\"\n  }, \"State\"), mdx(\"p\", null, \"These are dynamic colors:\"), mdx(State, {\n    initial: {\n      length: 5\n    },\n    mdxType: \"State\"\n  }, function (_ref2) {\n    var state = _ref2.state,\n        setState = _ref2.setState;\n    return mdx(React.Fragment, null, mdx(Slider, {\n      min: 1,\n      max: 10,\n      step: 1,\n      style: {\n        width: 350\n      },\n      value: state.length,\n      onChange: function onChange(e, v) {\n        return setState({\n          length: v\n        });\n      },\n      mdxType: \"Slider\"\n    }), mdx(\"div\", {\n      style: {\n        display: 'flex'\n      }\n    }, Array.from({\n      length: state.length\n    }, function (_, i) {\n      return mdx(\"div\", {\n        style: {\n          background: interpolateSinebow(i / state.length),\n          width: 20,\n          height: 40,\n          borderRadius: 30,\n          margin: 10\n        }\n      });\n    })));\n  }));\n}\n;\nMDXContent.isMDXComponent = true;"},"site":{"siteMetadata":{"title":"Loophole Letters"}}},"pageContext":{"id":"7f332f24-6324-5ebf-a4a8-87ab537a5512","parent":{"name":"TestMDX","base":"TestMDX.mdx","relativePath":"components/TestMDX.mdx","sourceInstanceName":"content/notes"},"title":"TestMDX"}},"staticQueryHashes":[]}