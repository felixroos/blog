{"componentChunkName":"component---node-modules-gatsby-theme-notes-src-templates-note-js","path":"/notes/components/SheetGrid","result":{"data":{"note":{"id":"debd9de6-d477-572d-941b-9317f7811f76","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"sheetgrid\"\n  }, \"SheetGrid\"), mdx(\"p\", null, \"Using \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"./NestedGrid\"\n  }, \"NestedGrid\"), \" + \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"./ChordSymbol\"\n  }, \"ChordSymbol\"), \", we can generate beautiful sheets!\"), mdx(\"h2\", {\n    \"id\": \"without-chordsymbol\"\n  }, \"Without ChordSymbol\"), mdx(\"p\", null, \"With plain text, the sheet looks like that:\"), mdx(NestedGrid, {\n    rows: [1],\n    innerBorders: true,\n    cells: [['F^7', ['Gm7', 'C7'], 'F^7', ['Bbm7', 'Eb7']], [['Am7', 'Ab7'], ['Gm7', 'C7'], 'F^7', ['Abm7', 'Db7']], ['Gb^7', ['Abm7', 'Db7'], 'Gb^7', ['Bm7', 'E7']], [['Bbm7', 'A7'], ['Abm7', 'Db7'], 'Gb^7', ['Am7', 'D7']], ['G^7', ['Gm7', 'C7'], 'F^7', ['Fm7', 'Bb7']], ['Eb^7', ['Abm7', 'Db7'], 'Gb^7', ['Gm7', 'C7']], ['F^7', ['Gm7', 'C7'], 'F^7', ['Bbm7', 'Eb7']], [['Am7', 'Ab7'], ['Gm7', 'C7'], 'F^7', ['Gm7', 'C7']]],\n    mdxType: \"NestedGrid\"\n  }), mdx(\"br\", null), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"<NestedGrid\\n  rows={[1]}\\n  innerBorders={true}\\n  cells={[\\n    ['F^7', ['Gm7', 'C7'], 'F^7', ['Bbm7', 'Eb7']],\\n    [['Am7', 'Ab7'], ['Gm7', 'C7'], 'F^7', ['Abm7', 'Db7']],\\n    ['Gb^7', ['Abm7', 'Db7'], 'Gb^7', ['Bm7', 'E7']],\\n    [['Bbm7', 'A7'], ['Abm7', 'Db7'], 'Gb^7', ['Am7', 'D7']],\\n    ['G^7', ['Gm7', 'C7'], 'F^7', ['Fm7', 'Bb7']],\\n    ['Eb^7', ['Abm7', 'Db7'], 'Gb^7', ['Gm7', 'C7']],\\n    ['F^7', ['Gm7', 'C7'], 'F^7', ['Bbm7', 'Eb7']],\\n    [['Am7', 'Ab7'], ['Gm7', 'C7'], 'F^7', ['Gm7', 'C7']],\\n  ]}\\n/>\\n\")), mdx(\"h2\", {\n    \"id\": \"renderchordsymbols-helper\"\n  }, \"renderChordSymbols helper\"), mdx(\"p\", null, \"To be able to render nested string arrays as ChordSymbol elements, we need a helper:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\"\n  }, \"export function renderChordSymbols(chords: NestedArray<string>, options?) {\\n  return mapNestedArray(chords, (node) => {\\n    if (!Array.isArray(node)) {\\n      return <ChordSymbol chord={node} {...options} />;\\n    }\\n    return node;\\n  });\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"with-chordsymbols\"\n  }, \"With ChordSymbols\"), mdx(\"p\", null, \"Now we can do this:\"), mdx(NestedGrid, {\n    rows: [1],\n    innerBorders: true,\n    outerBorders: false,\n    cells: renderChordSymbols([['F^7', ['Gm7', 'C7'], 'F^7', ['Bbm7', 'Eb7']], [['Am7', 'Ab7'], ['Gm7', 'C7'], 'F^7', ['Abm7', 'Db7']], ['Gb^7', ['Abm7', 'Db7'], 'Gb^7', ['Bm7', 'E7']], [['Bbm7', 'A7'], ['Abm7', 'Db7'], 'Gb^7', ['Am7', 'D7']], ['G^7', ['Gm7', 'C7'], 'F^7', ['Fm7', 'Bb7']], ['Eb^7', ['Abm7', 'Db7'], 'Gb^7', ['Gm7', 'C7']], ['F^7', ['Gm7', 'C7'], 'F^7', ['Bbm7', 'Eb7']], [['Am7', 'Ab7'], ['Gm7', 'C7'], 'F^7', ['Gm7', 'C7']]]),\n    mdxType: \"NestedGrid\"\n  }), mdx(\"br\", null), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"<NestedGrid\\n  rows={[1]}\\n  innerBorders={true}\\n  outerBorders={false}\\n  cells={renderChordSymbols([\\n    ['F^7', ['Gm7', 'C7'], 'F^7', ['Bbm7', 'Eb7']],\\n    [['Am7', 'Ab7'], ['Gm7', 'C7'], 'F^7', ['Abm7', 'Db7']],\\n    ['Gb^7', ['Abm7', 'Db7'], 'Gb^7', ['Bm7', 'E7']],\\n    [['Bbm7', 'A7'], ['Abm7', 'Db7'], 'Gb^7', ['Am7', 'D7']],\\n    ['G^7', ['Gm7', 'C7'], 'F^7', ['Fm7', 'Bb7']],\\n    ['Eb^7', ['Abm7', 'Db7'], 'Gb^7', ['Gm7', 'C7']],\\n    ['F^7', ['Gm7', 'C7'], 'F^7', ['Bbm7', 'Eb7']],\\n    [['Am7', 'Ab7'], ['Gm7', 'C7'], 'F^7', ['Gm7', 'C7']],\\n  ])}\\n/>\\n\")), mdx(\"h2\", {\n    \"id\": \"custom-font\"\n  }, \"Custom Font\"), mdx(\"p\", null, \"The second argument of renderChordSymbols is passed to the ChordSymbol element props, so we can change the font:\"), mdx(NestedGrid, {\n    rows: [1],\n    innerBorders: true,\n    outerBorders: false,\n    cells: renderChordSymbols([['F^7', ['Gm7', 'C7'], 'F^7', ['Bbm7', 'Eb7']], [['Am7', 'Ab7'], ['Gm7', 'C7'], 'F^7', ['Abm7', 'Db7']], ['Gb^7', ['Abm7', 'Db7'], 'Gb^7', ['Bm7', 'E7']], [['Bbm7', 'A7'], ['Abm7', 'Db7'], 'Gb^7', ['Am7', 'D7']], ['G^7', ['Gm7', 'C7'], 'F^7', ['Fm7', 'Bb7']], ['Eb^7', ['Abm7', 'Db7'], 'Gb^7', ['Gm7', 'C7']], ['F^7', ['Gm7', 'C7'], 'F^7', ['Bbm7', 'Eb7']], [['Am7', 'Ab7'], ['Gm7', 'C7'], 'F^7', ['Gm7', 'C7']]], {\n      fontFamily: 'monospace',\n      fontSize: '20px'\n    }),\n    mdxType: \"NestedGrid\"\n  }), mdx(\"br\", null), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"<NestedGrid\\n  rows={[1]}\\n  innerBorders={true}\\n  outerBorders={false}\\n  cells={renderChordSymbols(\\n    [\\n      ['F^7', ['Gm7', 'C7'], 'F^7', ['Bbm7', 'Eb7']],\\n      [['Am7', 'Ab7'], ['Gm7', 'C7'], 'F^7', ['Abm7', 'Db7']],\\n      ['Gb^7', ['Abm7', 'Db7'], 'Gb^7', ['Bm7', 'E7']],\\n      [['Bbm7', 'A7'], ['Abm7', 'Db7'], 'Gb^7', ['Am7', 'D7']],\\n      ['G^7', ['Gm7', 'C7'], 'F^7', ['Fm7', 'Bb7']],\\n      ['Eb^7', ['Abm7', 'Db7'], 'Gb^7', ['Gm7', 'C7']],\\n      ['F^7', ['Gm7', 'C7'], 'F^7', ['Bbm7', 'Eb7']],\\n      [['Am7', 'Ab7'], ['Gm7', 'C7'], 'F^7', ['Gm7', 'C7']],\\n    ],\\n    { fontFamily: 'monospace', fontSize: '20px' }\\n  )}\\n/>\\n\")), mdx(\"h3\", {\n    \"id\": \"next-steps\"\n  }, \"Next Steps:\"), mdx(\"ul\", {\n    \"className\": \"contains-task-list\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Colorize cells according to chord scale\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"find way to show major chords with triangles\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"add textarea editor\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"add player\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"add piano\"), mdx(\"li\", {\n    parentName: \"ul\",\n    \"className\": \"task-list-item\"\n  }, mdx(\"input\", {\n    parentName: \"li\",\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  }), \" \", \"add fancy chord symbols\", mdx(\"ul\", {\n    parentName: \"li\",\n    \"className\": \"contains-task-list\"\n  }, mdx(\"li\", {\n    parentName: \"ul\",\n    \"className\": \"task-list-item\"\n  }, mdx(\"input\", {\n    parentName: \"li\",\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  }), \" \", \"use \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.npmjs.com/package/bb-chord-symbol\"\n  }, \"https://www.npmjs.com/package/bb-chord-symbol\"))))), mdx(\"h2\", {\n    \"id\": \"rhythm-example\"\n  }, \"Rhythm Example\"), mdx(\"p\", null, \"This is the bolero:\"), mdx(NestedGrid, {\n    rows: [1],\n    innerBorders: true,\n    outerBorders: false,\n    cells: [[['sn', ['sn', 'sn', 'sn']], ['sn', ['sn', 'sn', 'sn']], ['sn', 'sn']], [['sn', ['sn', 'sn', 'sn']], ['sn', ['sn', 'sn', 'sn']], [['sn', 'sn', 'sn'], ['sn', 'sn', 'sn']]]],\n    mdxType: \"NestedGrid\"\n  }), mdx(\"br\", null), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"<NestedGrid\\n  rows={[1]}\\n  innerBorders={true}\\n  outerBorders={false}\\n  cells={[\\n    [\\n      ['sn', ['sn', 'sn', 'sn']],\\n      ['sn', ['sn', 'sn', 'sn']],\\n      ['sn', 'sn'],\\n    ],\\n    [\\n      ['sn', ['sn', 'sn', 'sn']],\\n      ['sn', ['sn', 'sn', 'sn']],\\n      [\\n        ['sn', 'sn', 'sn'],\\n        ['sn', 'sn', 'sn'],\\n      ],\\n    ],\\n  ]}\\n/>\\n\")), mdx(\"p\", null, \"in one line:\"), mdx(NestedGrid, {\n    rows: [1, 1],\n    innerBorders: true,\n    outerBorders: false,\n    cells: [[['sn', ['sn', 'sn', 'sn']], ['sn', ['sn', 'sn', 'sn']], ['sn', 'sn']], [['sn', ['sn', 'sn', 'sn']], ['sn', ['sn', 'sn', 'sn']], [['sn', 'sn', 'sn'], ['sn', 'sn', 'sn']]]],\n    mdxType: \"NestedGrid\"\n  }), mdx(\"br\", null), mdx(\"h2\", {\n    \"id\": \"sheetgrid-component\"\n  }, \"SheetGrid Component\"), mdx(\"p\", null, \"Using NestedGrid + renderChordSymbols + bestChordScales, a fancy colored sheet can be generated:\"), mdx(SheetGrid, {\n    rows: [1],\n    measures: [['F^7', ['Gm7', 'C7'], 'F^7', ['Bbm7', 'Eb7']], [['Am7', 'Ab7'], ['Gm7', 'C7'], 'F^7', ['Abm7', 'Db7']], ['Gb^7', ['Abm7', 'Db7'], 'Gb^7', ['Bm7', 'E7']], [['Bbm7', 'A7'], ['Abm7', 'Db7'], 'Gb^7', ['Am7', 'D7']], ['G^7', ['Gm7', 'C7'], 'F^7', ['Fm7', 'Bb7']], ['Eb^7', ['Abm7', 'Db7'], 'Gb^7', ['Gm7', 'C7']], ['F^7', ['Gm7', 'C7'], 'F^7', ['Bbm7', 'Eb7']], [['Am7', 'Ab7'], ['Gm7', 'C7'], 'F^7', ['Gm7', 'C7']]],\n    mdxType: \"SheetGrid\"\n  }), mdx(\"h3\", {\n    \"id\": \"next-steps-1\"\n  }, \"Next Steps\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"allow objects as cells to specify rows for each array\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"this can be used to support durations\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"try rendering notes with the pitch mapped to one dimension, scrolling into the other dimension\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"the outermost grid must not overflow\")))));\n}\n;\nMDXContent.isMDXComponent = true;"},"site":{"siteMetadata":{"title":"Loophole Letters"}}},"pageContext":{"id":"debd9de6-d477-572d-941b-9317f7811f76","parent":{"name":"SheetGrid","base":"SheetGrid.mdx","relativePath":"components/SheetGrid.mdx","sourceInstanceName":"content/notes"},"title":"SheetGrid"}},"staticQueryHashes":[]}