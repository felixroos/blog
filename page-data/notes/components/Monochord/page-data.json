{"componentChunkName":"component---node-modules-gatsby-theme-notes-src-templates-note-js","path":"/notes/components/Monochord","result":{"data":{"note":{"id":"9798ee83-09e5-55d7-9ca4-da8ed7bdb689","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"monochord\"\n  }, \"Monochord\"), mdx(\"p\", null, \"The monochord component mimics a real monochord. You can move the handle by dragging to change the ratio.\\nThe numbers describe the fraction of the length on either side.\"), mdx(\"p\", null, \"For example, this is the natural major triad, as it appears in the harmonic series:\"), mdx(Monochord, {\n    value: 1,\n    base: Note.freq('C4'),\n    disableRight: true,\n    mdxType: \"Monochord\"\n  }), mdx(\"br\", null), mdx(Monochord, {\n    value: 4 / 5,\n    base: Note.freq('C4'),\n    disableRight: true,\n    mdxType: \"Monochord\"\n  }), mdx(\"br\", null), mdx(Monochord, {\n    value: 2 / 3,\n    base: Note.freq('C4'),\n    disableRight: true,\n    mdxType: \"Monochord\"\n  }), mdx(\"br\", null), mdx(\"p\", null, \"Or, the natural minor triad:\"), mdx(Monochord, {\n    value: 1,\n    base: Note.freq('C4'),\n    disableRight: true,\n    mdxType: \"Monochord\"\n  }), mdx(\"br\", null), mdx(Monochord, {\n    value: 5 / 6,\n    base: Note.freq('C4'),\n    disableRight: true,\n    mdxType: \"Monochord\"\n  }), mdx(\"br\", null), mdx(Monochord, {\n    value: 2 / 3,\n    base: Note.freq('C4'),\n    disableRight: true,\n    mdxType: \"Monochord\"\n  }), mdx(\"br\", null), mdx(\"h1\", {\n    \"id\": \"just-intonation\"\n  }, \"Just Intonation\"), mdx(\"p\", null, \"Lets look at \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://de.wikipedia.org/wiki/Reine_Stimmung\"\n  }), \"just intonation\"), \".\\nI just took the frequency ratios from wikipedia and inverted them, as we are using string ratios here:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"function JustStrings() {\\n  return [1, 9 / 8, 5 / 4, 4 / 3, 3 / 2, 5 / 3, 15 / 8, 2]\\n    .map((r) => 1 / r)\\n    .map((p, i) => (\\n      <Monochord key={i} value={p} base={Note.freq('C4')} disableRight={true} />\\n    ));\\n}\\n\")), mdx(State, {\n    initial: {},\n    mdxType: \"State\"\n  }, function () {\n    return [1, 9 / 8, 5 / 4, 4 / 3, 3 / 2, 5 / 3, 15 / 8, 2].map(function (r) {\n      return 1 / r;\n    }).map(function (p, i) {\n      return mdx(Fragment, {\n        key: i,\n        mdxType: \"Fragment\"\n      }, mdx(Monochord, {\n        value: p,\n        base: Note.freq('C4'),\n        disableRight: true,\n        mdxType: \"Monochord\"\n      }), mdx(\"br\", null));\n    });\n  }), mdx(\"h1\", {\n    \"id\": \"calculating-ratios\"\n  }, \"Calculating Ratios\"), mdx(\"p\", null, \"Lets first define a function that calculates ratios\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"export function ratios(\\n  start = 1,\\n  factors = [2 / 3, 4 / 3],\\n  n = factors.length\\n) {\\n  const ratios = [start];\\n  for (let i = 0; i < n; ++i) {\\n    ratios.push(ratios[ratios.length - 1] * factors[i % factors.length]);\\n  }\\n  return ratios;\\n}\\n\")), mdx(\"h1\", {\n    \"id\": \"12-note-pythagorean-tuning\"\n  }, \"12 note Pythagorean Tuning\"), mdx(\"p\", null, \"This tuning can be obtained by going 6 fifth down and 6 fifths up from the root\"), mdx(State, {\n    initial: {\n      sort: false\n    },\n    mdxType: \"State\"\n  }, function (_ref2) {\n    var state = _ref2.state,\n        setState = _ref2.setState;\n    var ratios = [1, 1024 / 729, 256 / 243, 128 / 81, 32 / 27, 16 / 9, 4 / 3, 2 / 1, 3 / 2, 9 / 8, 27 / 16, 81 / 64, 243 / 128, 729 / 512].map(function (r) {\n      return 1 / r;\n    });\n    return ratios.map(function (p, i) {\n      return mdx(Fragment, {\n        key: i,\n        mdxType: \"Fragment\"\n      }, mdx(Monochord, {\n        value: p,\n        base: Note.freq('C4'),\n        disableRight: true,\n        mdxType: \"Monochord\"\n      }), mdx(\"br\", null));\n    });\n  }), mdx(\"p\", null, \"This way, we have the comma in the middle, between F# and G#.\"), mdx(\"h1\", {\n    \"id\": \"chinese-tuning\"\n  }, \"Chinese Tuning\"), mdx(\"p\", null, \"The chinese tuning is similar to the pythagorean tuning:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"ratios(1, [2 / 3, 4 / 3], 12);\\n\")), mdx(State, {\n    initial: {},\n    mdxType: \"State\"\n  }, function () {\n    return ratios(1, [2 / 3, 4 / 3], 12).concat([1 / 2]).map(function (p, i) {\n      return mdx(Fragment, {\n        key: i,\n        mdxType: \"Fragment\"\n      }, mdx(Monochord, {\n        value: p,\n        base: Note.freq('C4'),\n        disableRight: true,\n        mdxType: \"Monochord\"\n      }), mdx(\"br\", null));\n    });\n  }), mdx(\"p\", null, \"You can hear the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://en.wikipedia.org/wiki/Pythagorean_comma\"\n  }), \"pythagorean comma\"), \" by comparing the last two ratios.\"), mdx(\"h2\", {\n    \"id\": \"further-reading--watching\"\n  }, \"Further reading / watching\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"http://www.harmonik.de/harmonik/vtr_pdf/JustIntonation.pdf\"\n  }), \"http://www.harmonik.de/harmonik/vtr_pdf/JustIntonation.pdf\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://en.wikipedia.org/wiki/Just_intonation\"\n  }), \"https://en.wikipedia.org/wiki/Just_intonation\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://en.wikipedia.org/wiki/Pythagorean_comma\"\n  }), \"https://en.wikipedia.org/wiki/Pythagorean_comma\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://www.youtube.com/watch?v=8syA7S_5E3A\"\n  }), \"https://www.youtube.com/watch?v=8syA7S_5E3A\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://www.youtube.com/watch?v=TYhPAbsIqA8\"\n  }), \"https://www.youtube.com/watch?v=TYhPAbsIqA8\"))), mdx(\"h2\", {\n    \"id\": \"tbd\"\n  }, \"TBD\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"show nearest note / cents\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"animate vibration of string with Plot\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"calculate ratios automatically everywhere (dont use hard coded wikipedia ratios)\")));\n}\n;\nMDXContent.isMDXComponent = true;"},"image":{"src":"/static/og-image/monochord-b8257637f3.png"},"site":{"siteMetadata":{"title":"Loophole Letters"}}},"pageContext":{"id":"9798ee83-09e5-55d7-9ca4-da8ed7bdb689","parent":{"name":"Monochord","base":"Monochord.mdx","relativePath":"components/Monochord.mdx","sourceInstanceName":"content/notes"},"title":"Monochord"}}}