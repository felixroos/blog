{"componentChunkName":"component---node-modules-gatsby-theme-notes-src-templates-note-js","path":"/notes/components/Plot","result":{"data":{"note":{"id":"9a1d68c3-0cf4-51c0-8b4e-2f2b587e513b","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"plot\"\n  }, \"Plot\"), mdx(\"h2\", {\n    \"id\": \"default\"\n  }, \"Default\"), mdx(Plot, {\n    functions: [function (x) {\n      return 4 * Math.sin(x);\n    }],\n    mdxType: \"Plot\"\n  }), mdx(\"h2\", {\n    \"id\": \"bare\"\n  }, \"Bare\"), mdx(Plot, {\n    margin: {\n      top: 1,\n      bottom: 1,\n      left: 0,\n      right: 0\n    },\n    functions: [function (x) {\n      return Math.sin(x);\n    }],\n    range: {\n      x: [0, Math.PI],\n      y: [-1, 1]\n    },\n    hideAxes: true,\n    height: 20,\n    width: 100,\n    mdxType: \"Plot\"\n  }), mdx(\"h2\", {\n    \"id\": \"range\"\n  }, \"Range\"), mdx(Plot, {\n    range: {\n      x: [0, Math.PI * 2],\n      y: [0, 1]\n    },\n    functions: [function (x) {\n      return -Math.cos(x) / 2 + 0.5;\n    }],\n    colors: [\"darkseagreen\", \"darksalmon\"],\n    mdxType: \"Plot\"\n  }), mdx(\"h2\", {\n    \"id\": \"multiple-functions--colors\"\n  }, \"Multiple functions & colors\"), mdx(Plot, {\n    functions: [function (x) {\n      return x / 2;\n    }, function (x) {\n      return x;\n    }, function (x) {\n      return 2 * x;\n    }, function (x) {\n      return Math.sin(x);\n    }, function (x) {\n      return Math.cos(x);\n    }, function (x) {\n      return Math.pow(x, 2);\n    }, function (x) {\n      return Math.pow(2, x);\n    }],\n    mdxType: \"Plot\"\n  }), mdx(\"h2\", {\n    \"id\": \"functions-with-undefined--non-differentiable-values\"\n  }, \"Functions with undefined / non differentiable values\"), mdx(Plot, {\n    functions: [function (x) {\n      return x >= 0 && Math.sqrt(x);\n    }, function (x) {\n      return x !== 0 && 1 / x;\n    }, function (x) {\n      return Math.floor(x) !== 2 ? x : 2;\n    }],\n    mdxType: \"Plot\"\n  }), mdx(\"h2\", {\n    \"id\": \"with-grid--custom-style\"\n  }, \"With Grid & custom style\"), mdx(Plot, {\n    grid: {\n      x: 4,\n      y: 4\n    },\n    functions: [function (x) {\n      return 1 / 8 * Math.pow(x, 3);\n    }, function (x) {\n      return Math.sin(x * 4);\n    }],\n    strokeWidth: 4,\n    range: {\n      x: [-5, 5],\n      y: [-5, 5]\n    },\n    colors: [\"#f0a\", \"#0fa\"],\n    mdxType: \"Plot\"\n  }), mdx(\"h2\", {\n    \"id\": \"custom-functions\"\n  }, \"Custom functions\"), mdx(Plot, {\n    grid: {\n      x: 4,\n      y: 1\n    },\n    range: {\n      x: [-10, 10],\n      y: [-4, 4]\n    },\n    functions: [// 4= b * 1/8\n    function (x) {\n      var a = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\n      var f = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1 / 2;\n      var b = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n      var xf = Math.abs((x + 1 / f) / 2 * f);\n      var fract = xf % 1;\n      return 2 * a * (Math.floor(xf) % 2 === 0 ? fract - 1 / 2 : 1 / 2 - fract) + b;\n    }],\n    mdxType: \"Plot\"\n  }), mdx(\"h2\", {\n    \"id\": \"without-axes\"\n  }, \"Without Axes\"), mdx(Plot, {\n    hideAxes: true,\n    functions: [function (x) {\n      return Math.abs(x);\n    }, function (x) {\n      return -Math.sin(x) * 2;\n    }],\n    range: {\n      x: [-5, 5],\n      y: [-5, 5]\n    },\n    mdxType: \"Plot\"\n  }), mdx(\"h2\", {\n    \"id\": \"tbd\"\n  }, \"TBD\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"d3-zoom ?\")));\n}\n;\nMDXContent.isMDXComponent = true;"},"image":{"src":"/static/og-image/plot-8f1f4ef93a.png"},"site":{"siteMetadata":{"title":"Loophole Letters"}}},"pageContext":{"id":"9a1d68c3-0cf4-51c0-8b4e-2f2b587e513b","parent":{"name":"Plot","base":"Plot.mdx","relativePath":"components/Plot.mdx","sourceInstanceName":"content/notes"},"title":"Plot"}}}