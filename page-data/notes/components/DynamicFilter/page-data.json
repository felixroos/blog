{"componentChunkName":"component---node-modules-gatsby-theme-notes-src-templates-note-js","path":"/notes/components/DynamicFilter","result":{"data":{"note":{"id":"25565a8d-b1e4-5bc1-8a87-3436580c1e74","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"dynamicfilter\"\n  }, \"DynamicFilter\"), mdx(\"p\", null, \"This function allows filtering values using a dynamic plot\"), mdx(DynamicFilter, {\n    values: ['hello', 'hello', 'bye'],\n    mdxType: \"DynamicFilter\"\n  }), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"implement this: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://search-ui-stable.netlify.app/\"\n  }, \"https://search-ui-stable.netlify.app/\"), \" (or use without elastic search if possible) (\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/elastic/search-ui#about-search-ui-rocket\"\n  }, \"https://github.com/elastic/search-ui#about-search-ui-rocket\"), \")\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"maybe also this \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://help.github.com/en/github/searching-for-information-on-github/searching-issues-and-pull-requests\"\n  }, \"https://help.github.com/en/github/searching-for-information-on-github/searching-issues-and-pull-requests\"))));\n}\n;\nMDXContent.isMDXComponent = true;"},"site":{"siteMetadata":{"title":"Loophole Letters"}}},"pageContext":{"id":"25565a8d-b1e4-5bc1-8a87-3436580c1e74","parent":{"name":"DynamicFilter","base":"DynamicFilter.mdx","relativePath":"components/DynamicFilter.mdx","sourceInstanceName":"content/notes"},"title":"DynamicFilter"}},"staticQueryHashes":[]}