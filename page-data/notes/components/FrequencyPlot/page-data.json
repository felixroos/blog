{"componentChunkName":"component---node-modules-gatsby-theme-notes-src-templates-note-js","path":"/notes/components/FrequencyPlot","result":{"data":{"note":{"id":"90969935-fdb5-5754-adcd-9e7cad35bfbe","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"frequencyplot\"\n  }, \"FrequencyPlot\"), mdx(\"p\", null, \"This is a wrapper around Plot that simplifies working with harmonics.\"), mdx(FrequencyPlot, {\n    height: 150,\n    frequencies: [[1, 1, 0]],\n    addSum: false,\n    colors: [\"green\"],\n    autostartAnimation: true,\n    animationSpeed: 1 / 500,\n    mdxType: \"FrequencyPlot\"\n  }), mdx(State, {\n    initial: {\n      frequencies: [[1, 1, 0]]\n    },\n    mdxType: \"State\"\n  }, function (_ref2) {\n    var state = _ref2.state,\n        setState = _ref2.setState;\n    return mdx(React.Fragment, null, state.frequencies && mdx(FrequencyPlot, {\n      height: 150,\n      addSum: false,\n      frequencies: state.frequencies,\n      mdxType: \"FrequencyPlot\"\n    }), mdx(FrequencyPlotSettings, {\n      state: state,\n      setState: setState,\n      mdxType: \"FrequencyPlotSettings\"\n    }));\n  }));\n}\n;\nMDXContent.isMDXComponent = true;"},"image":{"src":"/static/og-image/frequency-plot-dc073d434a.png"},"site":{"siteMetadata":{"title":"Loophole Letters"}}},"pageContext":{"id":"90969935-fdb5-5754-adcd-9e7cad35bfbe","parent":{"name":"FrequencyPlot","base":"FrequencyPlot.mdx","relativePath":"components/FrequencyPlot.mdx","sourceInstanceName":"content/notes"},"title":"FrequencyPlot"}}}