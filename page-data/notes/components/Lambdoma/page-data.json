{"componentChunkName":"component---node-modules-gatsby-theme-notes-src-templates-note-js","path":"/notes/components/Lambdoma","result":{"data":{"note":{"id":"a30a2382-54e3-538a-8045-a0fd0607bfe9","body":"function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"lambdoma\"\n  }, \"Lambdoma\"), mdx(\"p\", null, \"A good way to look at the distribution of ratios is the Lambdoma\"), mdx(\"h3\", {\n    \"id\": \"5-limit-tuning\"\n  }, \"5 limit tuning\"), mdx(\"p\", null, \"Ratios of \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://en.wikipedia.org/wiki/Five-limit_tuning\"\n  }), \"5 limit tuning\"), \" can be obtained by products of integer powers of all prime numbers up to 5, which is true for any ratio R:\"), mdx(InlineMath, {\n    mdxType: \"InlineMath\"\n  }, \"R = 2^a * 3^b * 5^c\"), mdx(\"p\", null, \"for example the ratio 9/8 can be expressed as\"), mdx(InlineMath, {\n    mdxType: \"InlineMath\"\n  }, \"R = 2^{-3} * 3^2\"), mdx(\"p\", null, \"Generally, there is an unlimited number of ratios that can be produced with this formula, but we could limit the powers to remain inside some margin.\"), mdx(\"p\", null, \"For example, setting the margin to \", \"[-2,2]\", \", we get:\"), mdx(InlineMath, {\n    mdxType: \"InlineMath\"\n  }, \"\\\\frac{1}{36} = 2^{-2} * 3^{-2} = \"), mdx(\"br\", null), mdx(InlineMath, {\n    mdxType: \"InlineMath\"\n  }, \"\\\\frac{1}{12} = 2^{-2} * 3^{-1}\"), mdx(\"br\", null), mdx(InlineMath, {\n    mdxType: \"InlineMath\"\n  }, \"\\\\frac{1}{4} = 2^{-2} * 3^{0}\"), mdx(\"br\", null), mdx(InlineMath, {\n    mdxType: \"InlineMath\"\n  }, \"\\\\frac{3}{4} = 2^{-2} * 3^{1}\"), mdx(\"br\", null), mdx(InlineMath, {\n    mdxType: \"InlineMath\"\n  }, \"\\\\frac{9}{4} = 2^{-2} * 3^{2}\"), mdx(\"br\", null), mdx(InlineMath, {\n    mdxType: \"InlineMath\"\n  }, \"\\\\frac{1}{18} = 2^{-1} * 3^{-2}\"), mdx(\"br\", null), mdx(InlineMath, {\n    mdxType: \"InlineMath\"\n  }, \"\\\\frac{1}{9} = 2^{-1} * 3^{-1}\"), mdx(\"br\", null), mdx(InlineMath, {\n    mdxType: \"InlineMath\"\n  }, \"\\\\frac{1}{2} = 2^{-1} * 3^{0}\"), mdx(\"br\", null), mdx(InlineMath, {\n    mdxType: \"InlineMath\"\n  }, \"\\\\frac{3}{2} = 2^{-1} * 3^{1}\"), mdx(\"br\", null), mdx(InlineMath, {\n    mdxType: \"InlineMath\"\n  }, \"\\\\frac{9}{2} = 2^{-1} * 3^{2}\"), mdx(\"br\", null), mdx(InlineMath, {\n    mdxType: \"InlineMath\"\n  }, \"\\\\frac{1}{9} = 2^{0} * 3^{-2}\"), mdx(\"br\", null), mdx(InlineMath, {\n    mdxType: \"InlineMath\"\n  }, \"\\\\frac{1}{3} = 2^{0} * 3^{-1}\"), mdx(\"br\", null), mdx(InlineMath, {\n    mdxType: \"InlineMath\"\n  }, \"1 = 2^{0} * 3^{0}\"), mdx(\"br\", null), mdx(InlineMath, {\n    mdxType: \"InlineMath\"\n  }, \"3 = 2^{0} * 3^{1}\"), mdx(\"br\", null), mdx(InlineMath, {\n    mdxType: \"InlineMath\"\n  }, \"9 = 2^{0} * 3^{2}\"), mdx(\"br\", null), mdx(InlineMath, {\n    mdxType: \"InlineMath\"\n  }, \"\\\\frac{2}{9} = 2^{1} * 3^{-2}\"), mdx(\"br\", null), mdx(InlineMath, {\n    mdxType: \"InlineMath\"\n  }, \"\\\\frac{2}{3} = 2^{1} * 3^{-1}\"), mdx(\"br\", null), mdx(InlineMath, {\n    mdxType: \"InlineMath\"\n  }, \"2 = 2^{1} * 3^{0}\"), mdx(\"br\", null), mdx(InlineMath, {\n    mdxType: \"InlineMath\"\n  }, \"6 = 2^{1} * 3^{1}\"), mdx(\"br\", null), mdx(InlineMath, {\n    mdxType: \"InlineMath\"\n  }, \"18 = 2^{1} * 3^{2}\"), mdx(\"br\", null), mdx(InlineMath, {\n    mdxType: \"InlineMath\"\n  }, \"\\\\frac{4}{9} = 2^{2} * 3^{-2}\"), mdx(\"br\", null), mdx(InlineMath, {\n    mdxType: \"InlineMath\"\n  }, \"\\\\frac{4}{3} = 2^{2} * 3^{-1}\"), mdx(\"br\", null), mdx(InlineMath, {\n    mdxType: \"InlineMath\"\n  }, \"4 = 2^{2} * 3^{0}\"), mdx(\"br\", null), mdx(InlineMath, {\n    mdxType: \"InlineMath\"\n  }, \"12 = 2^{2} * 3^{1}\"), mdx(\"br\", null), mdx(InlineMath, {\n    mdxType: \"InlineMath\"\n  }, \"27 = 2^{2} * 3^{2}\"), mdx(\"p\", null, \"As we\\u2019re only interested in one octave, we can limit the results to be >1 and <2:\"), mdx(InlineMath, {\n    mdxType: \"InlineMath\"\n  }, \"\\\\frac{9}{4} = 2^{-2} * 3^{2}\"), mdx(\"br\", null), mdx(InlineMath, {\n    mdxType: \"InlineMath\"\n  }, \"\\\\frac{3}{2} = 2^{-1} * 3^{1}\"), mdx(\"br\", null), mdx(InlineMath, {\n    mdxType: \"InlineMath\"\n  }, \"\\\\frac{4}{3} = 2^{2} * 3^{-1}\"), mdx(\"p\", null, \"After stripping extensions:\"), mdx(InlineMath, {\n    mdxType: \"InlineMath\"\n  }, \"\\\\frac{3}{2} = 2^{-1} * 3^{1}\"), mdx(\"br\", null), mdx(InlineMath, {\n    mdxType: \"InlineMath\"\n  }, \"\\\\frac{4}{3} = 2^{2} * 3^{-1}\"), mdx(\"p\", null, \"Maybe there is an easier solution\\u2026\"), mdx(InlineMath, {\n    mdxType: \"InlineMath\"\n  }, \"2^{a} * 3^{b} > 1\"), mdx(\"br\", null), mdx(InlineMath, {\n    mdxType: \"InlineMath\"\n  }, \"2^{a} > {3^{-b}}\"), mdx(\"p\", null, \"and \"), mdx(InlineMath, {\n    mdxType: \"InlineMath\"\n  }, \"2^{a} * 3^{b} < 2\"), mdx(\"br\", null), mdx(InlineMath, {\n    mdxType: \"InlineMath\"\n  }, \"2^{a-1} < 3^{-b}\"), mdx(Lambdoma, {\n    margin: 0,\n    cols: 15,\n    rows: 15,\n    angle: 45,\n    radius: 20,\n    base: Note.freq(\"C4\"),\n    clamp: true,\n    hideExtensions: true,\n    hideLines: false,\n    hideZeroes: false,\n    filter: function filter(_ref2) {\n      var _ref3 = _slicedToArray(_ref2, 3),\n          value = _ref3[0],\n          top = _ref3[1],\n          bottom = _ref3[2];\n\n      return [top % 2, top % 3].includes(0) && [bottom % 2, bottom % 3].includes(0) || value === 1;\n    },\n    mdxType: \"Lambdoma\"\n  }), mdx(State, {\n    initial: {\n      angle: 45,\n      radius: 20,\n      size: 10,\n      hideExtensions: true,\n      hideLines: false,\n      hideZeroes: false,\n      clamp: true\n    },\n    mdxType: \"State\"\n  }, function (_ref4) {\n    var state = _ref4.state,\n        setState = _ref4.setState;\n    return mdx(React.Fragment, null, mdx(SimplePopover, {\n      placement: \"left-start\",\n      mdxType: \"SimplePopover\"\n    }, mdx(LambdomaSettings, {\n      state: state,\n      setState: setState,\n      mdxType: \"LambdomaSettings\"\n    })), mdx(Lambdoma, {\n      margin: 0,\n      cols: state.size,\n      rows: state.size,\n      angle: state.angle,\n      radius: state.radius,\n      base: Note.freq(\"C4\"),\n      clamp: state.clamp,\n      hideExtensions: state.hideExtensions,\n      hideLines: state.hideLines,\n      hideZeroes: state.hideZeroes,\n      mdxType: \"Lambdoma\"\n    }));\n  }), mdx(\"p\", null, \"This will give all frequencies of the same pitch class the same color.\"), mdx(\"h2\", {\n    \"id\": \"lambdomafloats\"\n  }, \"LambdomaFLoats\"), mdx(\"p\", null, \"Displays the the given floats as fractions in the Lambdoma\"), mdx(LambdomaFloats, {\n    floats: [1, 2, 3, 4 / 3].map(function (p) {\n      return clamp(p, 1);\n    }),\n    base: Note.freq(\"C4\"),\n    radius: 25,\n    mdxType: \"LambdomaFloats\"\n  }), mdx(\"h2\", {\n    \"id\": \"tbd\"\n  }, \"TBD\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"active / colorless states\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"display irrational numbers e.g. equal tempered notes\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"play synth continuus and change pitch via mouseover\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"alternative diamond shapes to close gaps\")), mdx(\"h2\", {\n    \"id\": \"related\"\n  }, \"Related\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/infusion/Fraction.js/\"\n  }), \"https://github.com/infusion/Fraction.js/\"))));\n}\n;\nMDXContent.isMDXComponent = true;"},"image":{"src":"/static/og-image/lambdoma-a8ae8df62e.png"},"site":{"siteMetadata":{"title":"Loophole Letters"}}},"pageContext":{"id":"a30a2382-54e3-538a-8045-a0fd0607bfe9","parent":{"name":"Lambdoma","base":"Lambdoma.mdx","relativePath":"components/Lambdoma.mdx","sourceInstanceName":"content/notes"},"title":"Lambdoma"}}}