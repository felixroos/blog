{"componentChunkName":"component---node-modules-gatsby-theme-notes-src-templates-note-js","path":"/notes/components/Graphviz","result":{"data":{"note":{"id":"9ee6931f-ccf9-500c-806a-5e8421a002cf","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"graphviz\"\n  }, \"Graphviz\"), mdx(\"p\", null, \"Using \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.npmjs.com/package/@hpcc-js/wasm\"\n  }, \"@hpcc-js/wasm\"), \".\"), mdx(\"strike\", null, \"Currently pretty hacky, as the script is loaded from jsdeliver.. did not find a way to bundle the module. But this lib is the only one i found that could handle large graphs without looking like shit.\"), mdx(\"p\", null, \"Update: Now using @hpcc-js/wasm + graphvizlib.wasm file as static asset, see \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/magjac/d3-graphviz/issues/152#issuecomment-625710638\"\n  }, \"this comment\"), \".\"), mdx(\"p\", null, \"The json is converted to dot via \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/jsongraph/jgf-dot#jgf-dot\"\n  }, \"jgf-dot\"), \".\"), mdx(\"h2\", {\n    \"id\": \"simple-example\"\n  }, \"Simple Example\"), mdx(Graph, {\n    editable: true,\n    json: {\n      graph: {\n        directed: true,\n        nodes: [{\n          label: 'A',\n          fillcolor: 'steelblue',\n          style: 'filled',\n          id: 0\n        }, {\n          label: 'B',\n          fillcolor: 'salmon',\n          style: 'filled',\n          id: 1\n        }],\n        edges: [{\n          source: 0,\n          target: 1,\n          label: 'link'\n        }]\n      }\n    },\n    mdxType: \"Graph\"\n  }), mdx(\"h2\", {\n    \"id\": \"moderate-example-chord-scales-of-a-251\"\n  }, \"Moderate Example: Chord Scales of a 251\"), mdx(Graph, {\n    editable: true,\n    json: {\n      graph: _objectSpread({\n        directed: true\n      }, chordScaleGraph(['Dm7', 'G7', 'C^7'], scaleModes('major')))\n    },\n    mdxType: \"Graph\"\n  }), mdx(\"h2\", {\n    \"id\": \"complex-example-chord-scales-of-solar\"\n  }, \"Complex Example: Chord Scales of \\u201CSolar\\u201D\"), mdx(Graph, {\n    editable: true,\n    json: {\n      graph: _objectSpread({\n        directed: true\n      }, chordScaleGraph(['CmM7', 'Gm7', 'C7', 'F^7', 'Fm7', 'Bb7', 'Eb^7', 'Ebm7', 'Ab7', 'Db^7', 'Dm7b5', 'G7b9', 'CmM7'], scaleModes('major', 'melodic minor', 'harmonic minor')))\n    },\n    mdxType: \"Graph\"\n  }), mdx(\"h2\", {\n    \"id\": \"very-complex-example-chord-scales-of-all-the-things-you-are\"\n  }, \"Very Complex Example: Chord Scales of \\u201CAll The Things You Are\\u201D\"), mdx(Graph, {\n    editable: true,\n    json: {\n      graph: _objectSpread({\n        directed: true\n      }, chordScaleGraph(['Fm7', 'Bbm7', 'Eb7', 'Ab^7', 'Db^7', 'Dm7', 'G7', 'C^7', 'C^7', 'Cm7', 'Fm7', 'Bb7', 'Eb^7', 'Ab^7', 'Am7', 'D7', 'G^7', 'G^7', 'Am7', 'D7', 'G^7', 'G^7', 'F#h7', 'B7b9', 'E^7', 'C7b13', 'Fm7', 'Bbm7', 'Eb7', 'Ab^7', 'Db^7', 'Db-^7', 'Cm7', 'Bo7', 'Bbm7', 'Eb7', 'Ab^7', 'Gh7', 'C7b9'], scaleModes('major', 'melodic minor', 'harmonic minor')))\n    },\n    mdxType: \"Graph\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;"},"site":{"siteMetadata":{"title":"Loophole Letters"}}},"pageContext":{"id":"9ee6931f-ccf9-500c-806a-5e8421a002cf","parent":{"name":"Graphviz","base":"Graphviz.mdx","relativePath":"components/Graphviz.mdx","sourceInstanceName":"content/notes"},"title":"Graphviz"}},"staticQueryHashes":[]}