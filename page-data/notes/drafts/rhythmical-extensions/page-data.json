{"componentChunkName":"component---node-modules-gatsby-theme-notes-src-templates-note-js","path":"/notes/drafts/rhythmical-extensions","result":{"data":{"note":{"id":"6354c793-4627-5bba-8cd1-7c9ee21d01ca","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"tracks-reducer\"\n  }, \"tracks reducer\"), mdx(\"p\", null, \"be able to transform one event array multiple times for different purposes:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"chords \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"basslines\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u201Cmeta\\u201D events like boxes or detected seven note scales\")), mdx(\"h2\", {\n    \"id\": \"editor\"\n  }, \"editor\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"textarea under player, updates on key shortcut or button click\")), mdx(\"h2\", {\n    \"id\": \"add-group-boxes\"\n  }, \"add group boxes\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"like in rhythmical REPL\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"add an event for each group (ignore in playback, just for viz)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"each group event is also visualized as a box\")), mdx(\"h2\", {\n    \"id\": \"advanced-colorization\"\n  }, \"advanced colorization\"), mdx(\"p\", null, \"colorize by.. \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"nesting deepness\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"pitch\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"degree in current scale / chord\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"related chroma(s) (or related 7 note scales)\")), mdx(\"h2\", {\n    \"id\": \"midi-importer\"\n  }, \"midi importer\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"be able to transform midi data to rhythmical events\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"maybe add a feature that allows setting a time value and not use nesting:\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"{\\n  duration: 4,\\n  midi: [ // [time, value, duration]\\n    [0, 'D4', 1],\\n    [0, 'F4', 1],\\n    [0, 'A4', 1],\\n    [1, 'G4', 1],\\n    [1, 'B4', 1],\\n    [1, 'D4', 1],\\n    [2, 'C4', 2],\\n    [2, 'E4', 2],\\n    [2, 'G4', 2],\\n  ];\\n}\\n\")), mdx(\"p\", null, \"=> this allows importing any premade midi melody from notation programs etc..\\n=> just insert midi + add chords => done song..\"), mdx(\"h2\", {\n    \"id\": \"ties\"\n  }, \"ties\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"renderRhythmObject({\\n  duration: 4,\\n  value: [\\n    ['C', 'E'],\\n    ['_', 'D']\\n  ]\\n});\\n// renders to\\n[\\n  { value: 'C', duration: 1 },\\n  { value: 'E', duration: 2 },\\n  { value: 'D', duration: 1 }\\n];\\n\")), mdx(\"h2\", {\n    \"id\": \"velocity\"\n  }, \"velocity\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"multiply down\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"already added to sampler => add to all other instruments\")), mdx(\"h2\", {\n    \"id\": \"chords\"\n  }, \"chords\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"resolve chord symbols to polyphonic notes\")), mdx(\"h2\", {\n    \"id\": \"nudge\"\n  }, \"nudge\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"allows microadjustment of notes\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"time and duration of siblings might be affected too\")), mdx(\"h2\", {\n    \"id\": \"swing\"\n  }, \"swing\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"nudges every second attack, inside a specified grid size\")), mdx(\"h2\", {\n    \"id\": \"string-notation\"\n  }, \"string notation\"), mdx(\"p\", null, \"like tidal\"), mdx(\"h2\", {\n    \"id\": \"event-buffer\"\n  }, \"event buffer\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"instead of rendering a whole piece, just repeat a short time loop e.g. 1 second\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"prerender only the events for the next cycle\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"allows creating endlessly alternating loops\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"similar to how tidal does it\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"needs some way of handling render state\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"could use a generator function\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"more dynamic & manipulation friendly system\")), mdx(\"h2\", {\n    \"id\": \"polymeter\"\n  }, \"polymeter\"), mdx(\"p\", null, \"the event buffer would be good to render polymeters in a performant way\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"{\\n  polymeter: [\\n    ['C', 'D'],\\n    ['E', 'F', 'G']\\n  ];\\n}\\n\")), mdx(\"p\", null, \"behaves like\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"[\\n  { polyphonic: ['C', 'E'] },\\n  { polyphonic: ['D', 'F'] }, // first loop finished\\n  { polyphonic: ['C', 'G'] }, // second loop finished\\n  { polyphonic: ['D', 'E'] }, // first loop finished\\n  { polyphonic: ['C', 'F'] },\\n  { polyphonic: ['D', 'G'] } // first + second loop finished\\n];\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"a polymeter different pulse lengths (2 & 3 above) will repeat with a cycle length of their least common multiple (6 above)\")), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://tidalcycles.org/index.php/What_is_a_pattern%3F\"\n  }), \"https://tidalcycles.org/index.php/What_is_a_pattern%3F\")), mdx(\"p\", null, \"try to use \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/gibber-cc/tidal.pegjs\"\n  }), \"https://github.com/gibber-cc/tidal.pegjs\"), \" with tonejs! (and use as plugin for rhythmical later)\"));\n}\n;\nMDXContent.isMDXComponent = true;"},"image":{"src":"/static/og-image/rhythmical-extensions-09c69b9f76.png"},"site":{"siteMetadata":{"title":"Loophole Letters"}}},"pageContext":{"id":"6354c793-4627-5bba-8cd1-7c9ee21d01ca","parent":{"name":"rhythmical-extensions","base":"rhythmical-extensions.mdx","relativePath":"drafts/rhythmical-extensions.mdx","sourceInstanceName":"content/notes"},"title":"rhythmical-extensions"}}}