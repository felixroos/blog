{"componentChunkName":"component---node-modules-gatsby-theme-notes-src-templates-note-js","path":"/notes/drafts/key-detection","result":{"data":{"note":{"id":"1d4ff2ab-b83f-56a6-89b8-375abf616787","body":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"key-detection\"\n  }, \"Key Detection\"), mdx(\"p\", null, \"Lets say we have chords\"), mdx(Player, {\n    fold: false,\n    events: renderRhythmObject({\n      duration: 64,\n      sequential: [['Fm7', 'Bbm7', 'Eb7', 'Ab^7'], ['Db^7', ['Dm7', 'G7'], 'C^7', '_'], ['Cm7', 'Fm7', 'Bb7', 'Eb^7'], ['Ab^7', ['Am7', 'D7'], 'G^7', '_'], ['Am7', 'D7', 'G^7', '_'], ['F#m7b5', 'B7b9', 'E^7', 'C7b13'], ['Fm7', 'Bbm7', 'Eb7', 'Ab^7'], ['Db^7', 'DbmM7', 'Cm7', 'Bo7'], ['Bbm7', 'Eb7', 'Ab^7', ['Gm7b5', 'C7b9']]]\n    }).reduce(tieReducer(), []).reduce(voicingReducer(lefthand, ['G3', 'G5']), []),\n    mdxType: \"Player\"\n  }), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"renderRhythmObject({\\n  duration: 64,\\n  sequential: [\\n    ['Fm7', 'Bbm7', 'Eb7', 'Ab^7'],\\n    ['Db^7', ['Dm7', 'G7'], 'C^7', '_'],\\n    ['Cm7', 'Fm7', 'Bb7', 'Eb^7'],\\n    ['Ab^7', ['Am7', 'D7'], 'G^7', '_'],\\n    ['Am7', 'D7', 'G^7', '_'],\\n    ['F#m7b5', 'B7b9', 'E^7', 'C7b13'],\\n    ['Fm7', 'Bbm7', 'Eb7', 'Ab^7'],\\n    ['Db^7', 'DbmM7', 'Cm7', 'Bo7'],\\n    ['Bbm7', 'Eb7', 'Ab^7', ['Gm7b5', 'C7b9']]\\n  ]\\n});\\n\")), mdx(\"p\", null, \"the first 8 rendered events, before any reducers are applied, look like this:\"), mdx(\"pre\", null, JSON.stringify(renderRhythmObject({\n    duration: 9 * 4,\n    sequential: [['Fm7', 'Bbm7', 'Eb7', 'Ab^7'], ['Db^7', ['Dm7', 'G7'], 'C^7', '_'], ['Cm7', 'Fm7', 'Bb7', 'Eb^7'], ['Ab^7', ['Am7', 'D7'], 'G^7', '_'], ['Am7', 'D7', 'G^7', '_'], ['F#m7b5', 'B7b9', 'E^7', 'C7b13'], ['Fm7', 'Bbm7', 'Eb7', 'Ab^7'], ['Db^7', 'DbmM7', 'Cm7', 'Bo7'], ['Bbm7', 'Eb7', 'Ab^7', ['Gm7b5', 'C7b9']]]\n  }).map(function (e) {\n    return Object.entries(e).reduce(function (o, _ref2) {\n      var _ref3 = _slicedToArray(_ref2, 2),\n          key = _ref3[0],\n          value = _ref3[1];\n\n      return _objectSpread({}, o, {}, key !== 'path' ? _defineProperty({}, key, value) : {});\n    }, {});\n  }).slice(0, 8), null, 2)), mdx(\"p\", null, \"How on earth do we find out which scales are the best?\"), mdx(\"h3\", {\n    \"id\": \"available-scales\"\n  }, \"available scales\"), mdx(\"p\", null, \"For simplicity, let\\u2019s limit the scales we check for to only major scales.\"), mdx(\"h3\", {\n    \"id\": \"concept\"\n  }, \"concept\"), mdx(\"p\", null, \"we could\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"find scales that contain the chord (parent scales)\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"sort scales by \\u201Creach\\u201D, meaning most subsequent siblings that all have that parent scale\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"decide which scale fits best\")), mdx(\"h3\", {\n    \"id\": \"example\"\n  }, \"example\"), mdx(\"p\", null, \"with only major or harmonic minor scales, those are the possibilities for the first 8 chords:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Fm7 => Eb major, Ab major, Db major\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Bbm7 => Ab major, Gb major, Db major\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Eb7 => Ab major\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Ab^7 => Ab major, Eb major\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Db^7 => Db major, Ab major\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Dm7 => C major, Bb major, F major\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"G7 => C major\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"C^7 => C major, G major\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"C^7 => C major, G major\")), mdx(\"h3\", {\n    \"id\": \"flood-fill\"\n  }, \"flood fill\"), mdx(\"p\", null, \"let\\u2019s try a \\u201Cflood fill\\u201D, beginning with the first:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Fm7 => Eb major, Ab major, Db major\")), mdx(\"p\", null, \"now, for each of those 3 scales, we can count how many siblings also have that parent scale:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Eb major: 0 => next sibling does not have Eb major => stop\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Ab major: 4 => next 4 siblings all have Ab major\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Db major: 1 => only the next sibling has Db major\")), mdx(\"p\", null, \"So for the first chord, Ab major is the best choice, because the next 4 chords also represent Ab major.\\nFor this first chord, we can now notate [\\u2018Ab major\\u2019, \", \"[0, 5]\", \"] which is [scale, \", \"[relativeIndex, size]\", \"]\"), mdx(\"p\", null, \"We could repeat this for each chord, creating a scale map:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"[\\n  [\\n    // Fm7 scales with reach (including Fm7 itself)\\n    ['Ab major', 0, 5], //Ab major last 5 chords, starting here (0)\\n    ['Db major', 0, 2],\\n    ['Eb major', 0, 1]\\n  ],\\n  [\\n    // Bbm7 scales\\n    ['Ab major', 1, 5], //Ab major lasts 5 chords, started last chord (1)\\n    ['Db major', 1, 2],\\n    ['Gb major', 0, 1]\\n  ],\\n  [\\n    // Eb7 scales\\n    ['Ab major', 2, 5] //this is chord 3/5 for Ab major\\n  ],\\n  [\\n    // Ab^7\\n    ['Ab major', 3, 5], //this is chord 4/5 for Ab major\\n    ['Eb major', 0, 1]\\n  ],\\n  [\\n    // Db^7\\n    ['Ab major', 4, 5], //this is the last Ab major chord\\n    ['Db major', 0, 1]\\n  ],\\n  [\\n    // Dm7\\n    ['C major', 0, 4], // c major starts now\\n    ['Bb major', 0, 1],\\n    ['F major', 0, 1]\\n  ],\\n  [\\n    // G7\\n    ['C major', -1, 4]\\n  ],\\n  [\\n    // C^7\\n    ['C major', -2, 4],\\n    ['G major', 0, 1]\\n  ],\\n  [\\n    // C^7 again\\n    ['C major', -2, 4],\\n    ['G major', 0, 1]\\n  ]\\n];\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"could also use time + duration instead of indices for future considerations\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"as soon as non diatonic chords appear, we need either more scales, or alternative strats\")), mdx(\"h2\", {\n    \"id\": \"implementation\"\n  }, \"Implementation\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"getParentScales('Bbm7', ['major', 'harmonic minor']);\\n// ['Ab major', 'Gb major', 'Db major', 'F harmonic minor']\\n\\nconst chords = chordEvents.map((e) => getParentScales(chordEvent.value));\\n/*\\n[\\n  ['Ab major', 'Eb major', 'Db major', 'C harmonic minor']\\n  ['Ab major', 'Gb major', 'Db major', 'F harmonic minor'],\\n  ['Ab major', 'Ab harmonic minor'],\\n  ['Ab major', 'Eb major', 'C harmonic minor'],\\n  ['Db major', 'Ab major', 'F harmonic minor']\\n]\\n*/\\n\\nconst scales = chords.forEach((chordScales, i) => {\\n  // chordScales = ['Ab major', 'Eb major', 'Db major', 'C harmonic minor']\\n  // i = 0\\n\\n  // returns slice region that contains uninterrupted value\\n  function fill2D(value: string, i: number, layers: string[][]) {\\n    let reach = [0, 0]; // [behind, ahead]\\n    index = i;\\n    while (index - 1 >= 0 && layers[index - 1].includes(value)) {\\n      index -= 1;\\n      reach[0] += 1;\\n    }\\n    let index = i;\\n    while (index + 1 < layers.length && layers[index + 1].includes(value)) {\\n      index += 1;\\n      reach[1] += 1;\\n    }\\n    return [i - reach[0], i + reach[1] + 1]; // [start, size] (like slice params)\\n  }\\n  // fill2D('blue', 1, [['red','yellow'],['blue','yellow'],['blue','yellow']]) => [1,2]\\n  // fill2D('blue', 2, [['red','yellow'],['blue','yellow'],['blue','yellow']]) => [1,2]\\n  // fill2D('yellow', 0, [['red','yellow'],['blue','yellow'],['blue','yellow']]) => [0,3]\\n  // fill2D('yellow', 2, [['red','yellow'],['blue','yellow'],['blue','yellow']]) => [0,3]\\n\\n  const reaches = chordScales\\n    .map(fill2D(chordScale, i, chordScales))\\n    .map(([start, size], i) => [chordScales[i], size]);\\n  return Object.sort(([i, a], [j, b]) => b - a)[0][0];\\n  // [['Ab major', 4], ['Eb major', 1], ['Db major', 0], ['C harmonic minor', 0]]\\n});\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"},"image":{"src":"/static/og-image/key-detection-21a1c49b4b.png"},"site":{"siteMetadata":{"title":"Loophole Letters"}}},"pageContext":{"id":"1d4ff2ab-b83f-56a6-89b8-375abf616787","parent":{"name":"key-detection","base":"key-detection.mdx","relativePath":"drafts/key-detection.mdx","sourceInstanceName":"content/notes"},"title":"key-detection"}}}