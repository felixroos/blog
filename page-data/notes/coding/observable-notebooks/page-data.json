{"componentChunkName":"component---node-modules-gatsby-theme-notes-src-templates-note-js","path":"/notes/coding/observable-notebooks","result":{"data":{"note":{"id":"58ced436-28a5-547c-bc6f-ac2c324df8d3","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Importing Observable Notebooks in MDX\",\n  \"date\": \"2020-04-01T00:00:00.000Z\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Thanks to\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://observablehq.com/@observablehq/downloading-and-embedding-notebooks\"\n  }), \"https://observablehq.com/@observablehq/downloading-and-embedding-notebooks\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://observablehq.com/@observablehq/how-to-embed-a-notebook-in-a-react-app\"\n  }), \"https://observablehq.com/@observablehq/how-to-embed-a-notebook-in-a-react-app\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://www.serendipidata.com/posts/observablehq-in-markdown-with-gatsby\"\n  }), \"https://www.serendipidata.com/posts/observablehq-in-markdown-with-gatsby\"))), mdx(\"p\", null, \"I found a way to import Observable notebooks into mdx. Some things are still not perfect:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"es6 imports dont work with gatsby\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"cannot import notebook directly / dynamically\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"even when installing notebooks statically, referenced es6 modules still wont work\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"no code editor\")), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"add ObservableNotebook.js component\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"import React, { useRef, useEffect } from \\\"react\\\"\\nimport { Runtime, Inspector } from \\\"@observablehq/runtime\\\"\\n\\nexport default function ObservableNotebook({ notebook }) {\\n  const container = useRef()\\n  useEffect(() => {\\n    if (!container.current || !notebook) {\\n      return\\n    }\\n    container.current.innerHTML = \\\"\\\"\\n    Runtime.load(notebook, Inspector.into(container.current))\\n  }, [notebook])\\n  return <div ref={container}></div>\\n}\\n\")), mdx(\"ol\", {\n    \"start\": 2\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"install notebook\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-sh\"\n  }), \"yarn add https://api.observablehq.com/@hydrosquall/breathing-cube-in-p5-js.tgz\\n\")), mdx(\"ol\", {\n    \"start\": 3\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"load it\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-md\"\n  }), \"import notebook from \\\"breathing-cube-in-p5-js\\\"\\nimport ObservableNotebook from \\\"../components/ObservableNotebook\\\"\\n\\n<ObservableNotebook notebook={notebook} />\\n\")), mdx(\"ol\", {\n    \"start\": 4\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Voir la:\")), mdx(\"p\", null, \"deactivated due to yarn error for package \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"breathing-cube-in-p5-js\")), mdx(\"p\", null, \"//import notebook from \\u201Cbreathing-cube-in-p5-js\\u201D\\n//import ObservableNotebook from \\u201D../../components/ObservableNotebook.js\\u201D\"));\n}\n;\nMDXContent.isMDXComponent = true;"},"image":{"src":"/static/og-image/observable-notebooks-c0225cb469.png"},"site":{"siteMetadata":{"title":"Loophole Letters"}}},"pageContext":{"id":"58ced436-28a5-547c-bc6f-ac2c324df8d3","parent":{"name":"observable-notebooks","base":"observable-notebooks.mdx","relativePath":"coding/observable-notebooks.mdx","sourceInstanceName":"content/notes"},"title":"observable-notebooks"}}}