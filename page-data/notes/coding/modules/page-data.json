{"componentChunkName":"component---node-modules-gatsby-theme-notes-src-templates-note-js","path":"/notes/coding/modules","result":{"data":{"note":{"id":"1a08ff3b-8b8d-5d32-b9a6-6ce441d4d89e","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"taken from notes\"), mdx(\"h1\", {\n    \"id\": \"jazzband-module\"\n  }, \"jazzband Module\"), mdx(\"p\", null, \"This document tries to find the best module format\"), mdx(\"h2\", {\n    \"id\": \"native-browser-modules\"\n  }, \"Native Browser Modules\"), mdx(\"p\", null, \"It would be nice to be able to import the jazzband package natively without needing to use a build tool:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-html\"\n  }), \"<button id=\\\"play\\\">PLAY</button>\\n<script type=\\\"module\\\">\\n  import * as jazz from './node_modules/jazzband/lib/index.js';\\n  const context = new AudioContext();\\n  const band = new jazz.Trio({ context });\\n  const playButton = document.getElementById('play');\\n  playButton.addEventListener('click', () => {\\n    band.comp({ chords: ['D-7', 'G7', 'C^7', 'C^7'] }, { bpm: 120 });\\n  });\\n</script>\\n\")), mdx(\"p\", null, \"see \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://developers.google.com/web/fundamentals/primers/modules\"\n  }), \"https://developers.google.com/web/fundamentals/primers/modules\")), mdx(\"p\", null, \"Currently, this does not possible due to typescript issues:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/Microsoft/TypeScript/issues/16577\"\n  }), \"https://github.com/Microsoft/TypeScript/issues/16577\"))), mdx(\"h3\", {\n    \"id\": \"possible-workarounds\"\n  }, \"Possible Workarounds\"), mdx(\"p\", null, \"=> UPDATE: look into UMD\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/guybedford/isomorphic-browser-modules\"\n  }), \"https://github.com/guybedford/isomorphic-browser-modules\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/guybedford/es-module-shims\"\n  }), \"https://github.com/guybedford/es-module-shims\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/TypeStrong/ts-loader#appendtssuffixto-regexp-default\"\n  }), \"https://github.com/TypeStrong/ts-loader#appendtssuffixto-regexp-default\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/WICG/import-maps\"\n  }), \"https://github.com/WICG/import-maps\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://developers.google.com/web/updates/2017/11/dynamic-import\"\n  }), \"https://developers.google.com/web/updates/2017/11/dynamic-import\")))));\n}\n;\nMDXContent.isMDXComponent = true;"},"image":{"src":"/static/og-image/modules-05dca92a47.png"},"site":{"siteMetadata":{"title":"Loophole Letters"}}},"pageContext":{"id":"1a08ff3b-8b8d-5d32-b9a6-6ce441d4d89e","parent":{"name":"modules","base":"modules.md","relativePath":"coding/modules.md","sourceInstanceName":"content/notes"},"title":"modules"}}}