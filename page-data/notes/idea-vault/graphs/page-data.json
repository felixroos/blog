{"componentChunkName":"component---node-modules-gatsby-theme-notes-src-templates-note-js","path":"/notes/idea-vault/graphs","result":{"data":{"note":{"id":"0dde4fd8-c5f7-5edc-8bd1-88f187e64460","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"graphs\"\n  }, \"Graphs\"), mdx(\"h2\", {\n    \"id\": \"graphviz\"\n  }, \"Graphviz\"), mdx(\"p\", null, \"Graphviz json renderer Using \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.npmjs.com/package/@hpcc-js/wasm\"\n  }, \"@hpcc-js/wasm\"), \" + \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/jsongraph/jgf-dot#jgf-dot\"\n  }, \"jgf-dot\"), \".\"), mdx(\"p\", null, \"More info, see \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../components/Graphviz\"\n  }, \"Graphviz\"), \".\"), mdx(Graph, {\n    editable: false,\n    json: {\n      graph: {\n        directed: true,\n        nodes: [{\n          label: 'A',\n          fillcolor: 'steelblue',\n          style: 'filled',\n          id: 0\n        }, {\n          label: 'B',\n          fillcolor: 'salmon',\n          style: 'filled',\n          id: 1\n        }],\n        edges: [{\n          source: 0,\n          target: 1,\n          label: 'link'\n        }]\n      }\n    },\n    mdxType: \"Graph\"\n  }), mdx(\"h2\", {\n    \"id\": \"graphvizjson\"\n  }, \"GraphvizJSON\"), mdx(\"p\", null, \"Same as Graphviz component, but using \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.npmjs.com/package/graphviz-react\"\n  }, \"graphviz-react\"), \" (no commit since 9 month), which uses an old version \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.npmjs.com/package/d3-graphviz\"\n  }, \"d3-graphviz\"), \", which uses an older version of \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.npmjs.com/package/@hpcc-js/wasm\"\n  }, \"@hpcc-js/wasm\"), \".\"), mdx(\"p\", null, \"TBD: migrate components to using new Graphviz component, which has less dependencies and uses the new version of graphviz.\"), mdx(\"p\", null, \"this has been removed, use Graphviz instead\"), mdx(\"h2\", {\n    \"id\": \"nestedgrid\"\n  }, \"NestedGrid\"), mdx(NestedGrid, {\n    cells: ['A', ['B', 'C']],\n    innerBorders: true,\n    mdxType: \"NestedGrid\"\n  }), mdx(\"p\", null, \"See \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../components/NestedGrid\"\n  }, \"NestedGrid\"), \".\"), mdx(\"h2\", {\n    \"id\": \"pathbuilder\"\n  }, \"PathBuilder\"), mdx(\"p\", null, \"Builds up a chord-scale path, using PathView. See chord-scales.\"), mdx(\"p\", null, \"TBD: rename e.g. ScalePathBuilder + move to chord-scales folder?\"), mdx(\"h2\", {\n    \"id\": \"pathgraph\"\n  }, \"PathGraph\"), mdx(\"p\", null, \"Constructs a graph from given paths. Used in PathView\"), mdx(\"h2\", {\n    \"id\": \"pathtree\"\n  }, \"PathTree\"), mdx(\"p\", null, \"Constructs a tree from given paths.\"), mdx(\"h2\", {\n    \"id\": \"pathview\"\n  }, \"PathView\"), mdx(\"p\", null, \"Uses PathGraph and PathTree\"), mdx(\"h2\", {\n    \"id\": \"astar\"\n  }, \"astar\"), mdx(\"h2\", {\n    \"id\": \"bestpath\"\n  }, \"bestPath\"), mdx(\"h2\", {\n    \"id\": \"buildgraph\"\n  }, \"buildGraph\"), mdx(\"h2\", {\n    \"id\": \"buildtree\"\n  }, \"buildTree\"), mdx(\"h2\", {\n    \"id\": \"chordscalegraph\"\n  }, \"chordScaleGraph\"), mdx(\"h2\", {\n    \"id\": \"countpathextensions\"\n  }, \"countPathExtensions\"), mdx(\"h2\", {\n    \"id\": \"decoratepathvalues\"\n  }, \"decoratePathValues\"), mdx(\"h2\", {\n    \"id\": \"extendbestpath\"\n  }, \"extendBestPath\"), mdx(\"h2\", {\n    \"id\": \"generatebestpath\"\n  }, \"generateBestPath\"));\n}\n;\nMDXContent.isMDXComponent = true;"},"site":{"siteMetadata":{"title":"Loophole Letters"}}},"pageContext":{"id":"0dde4fd8-c5f7-5edc-8bd1-88f187e64460","parent":{"name":"graphs","base":"graphs.mdx","relativePath":"idea-vault/graphs.mdx","sourceInstanceName":"content/notes"},"title":"graphs"}},"staticQueryHashes":[]}