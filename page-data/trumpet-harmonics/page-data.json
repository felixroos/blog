{"componentChunkName":"component---node-modules-gatsby-theme-blog-core-src-templates-post-query-js","path":"/trumpet-harmonics/","result":{"data":{"site":{"siteMetadata":{"title":"Loophole Letters","social":[{"name":"github","url":"https://github.com/felixroos"},{"name":"GitHub","url":"https://github.com/gatsbyjs"}]}},"blogPost":{"__typename":"MdxBlogPost","id":"d0b4abab-ce23-5672-8aea-2e5d74cdd7ec","excerpt":"The harmonic spiral from last post can also be used to vizualize the harmonics of instruments that work with overblowing, like a trumpetâ€¦","body":"function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _Tone = Tone,\n    PolySynth = _Tone.PolySynth,\n    Synth = _Tone.Synth;\nvar harp = canUseDOM() && new PolySynth(6, Synth, {\n  volume: -16,\n  envelope: {\n    attack: 0.01,\n    decay: 2,\n    sustain: 0,\n    release: 0.1\n  },\n  oscillator: {\n    type: 'fmtriangle'\n  }\n}).toMaster();\nvar _frontmatter = {\n  \"title\": \"Trumpet Harmonics\",\n  \"date\": \"2020-05-19T00:00:00.000Z\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The harmonic spiral from last post can also be used to vizualize the harmonics of instruments that work with overblowing, like a trumpet:\"), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"/blog/1ceab5cbd5d034eae94e3566e94f7353/trumpet.svg\",\n    \"alt\": \"trumpet\"\n  }))), mdx(\"p\", null, \"Before I show the spiral, let\\u2019s look at how a trumpet handles pitch.\"), mdx(\"h3\", {\n    \"id\": \"how-a-trumpet-produces-different-pitches\"\n  }, \"How a trumpet produces different pitches\"), mdx(\"p\", null, \"A trumpet without valves can just play the harmonic series, which has large gaps. To fix that, valves are used to send the air through extra detours:\"), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"/blog/9ffe6a185ca380d1a554c12c3ba4340d/valve2d.gif\",\n    \"alt\": \"valve\"\n  }))), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"screenshot from \", mdx(\"a\", _extends({\n    parentName: \"em\"\n  }, {\n    \"href\": \"http://www.dwerden.com/comp/aCompIntro9_FlowFlow_F4.html\"\n  }), \"this animation\"))), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"the tube length directly affects the pitch of the horn => longer tube = lower note\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"if no valve is pressed, the tube is the shortest\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"if a valve is pressed, the tube is elongated by the length of the slide that comes out of its piston\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"the elongation of the third slide is the same as the elongation of the first and second combined (approximately)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"the player can play all harmonics of a certain tube length by raising the air pressure\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"with all harmonics of all possible tube lengths, all common equal temperament notes (or at least close ones) can be played (and more)\")), mdx(\"p\", null, \"As there are 3 valves with two states each, we can create 8 different combinations. Each combination can be expressed as a binary number (0 = not pressed, 1 = pressed).\\nTo read the binary numbers in a useful order, let\\u2019s flip the trumpet. \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"If we would read the bits in the other direction, one two and three would not coincide with the valves one two and three\")), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"/blog/b0e8ba5c72aa13a5b5a22ec943fec7c4/trumpet-mirrored.svg\",\n    \"alt\": \"trumpet\"\n  }))), mdx(\"h3\", {\n    \"id\": \"valve-combinations\"\n  }, \"Valve Combinations\"), mdx(\"table\", null, mdx(\"tbody\", null, mdx(\"tr\", null, mdx(\"th\", null, \"color\"), mdx(\"th\", null, \"binary\"), mdx(\"th\", null, \"decimal\"), mdx(\"th\", null, \"semitones\"), mdx(\"th\", null, \"root\")), [[0, '000', 'C2'], [-1, '010', 'B1'], [-2, '001', 'Bb1'], [-3, '011', 'A1'], [-3, '100', 'A1'], [-4, '110', 'Ab1'], [-5, '101', 'G1'], [-6, '111', 'Gb1']].map(function (_ref2, i) {\n    var _ref3 = _slicedToArray(_ref2, 3),\n        offset = _ref3[0],\n        combination = _ref3[1],\n        root = _ref3[2];\n\n    return mdx(\"tr\", {\n      key: i\n    }, mdx(\"td\", null, mdx(\"div\", {\n      style: {\n        width: 20,\n        height: 20,\n        borderRadius: '50%',\n        backgroundColor: frequencyColor(edo12(offset) * Note.freq('Bb1') * 3)\n      }\n    })), mdx(\"td\", null, combination), mdx(\"td\", null, parseInt(combination, 2)), mdx(\"td\", null, offset), mdx(\"td\", null, root));\n  }))), mdx(\"p\", null, \"Due to the fact that the elongation of the third slide is the same as the elongation of the first and second slides combined, the combination 011 (3) creates the same harmonics as 100 (4). This lucky coincidence maps the decimal number 3 to the 3rd valve!\"), mdx(\"h3\", {\n    \"id\": \"harmonic-spiral\"\n  }, \"Harmonic Spiral\"), mdx(State, {\n    initial: {\n      zoom: 1.1,\n      spin: 0,\n      precision: 1,\n      min: 0,\n      max: 4,\n      strokeWidth: 2,\n      base: Note.freq('Bb1'),\n      fontSize: 12,\n      reduce: false,\n      temper: false,\n      defaultsOnly: false,\n      showValves: false\n    },\n    mdxType: \"State\"\n  }, function (_ref4) {\n    var state = _ref4.state,\n        setState = _ref4.setState;\n    var generator = 4 / 3;\n    var notes = 54;\n    var octaveRadius = 60;\n    var ratios = [1, 2, 3, 4, 5];\n    var valves = [[0, '000'], [-1, '010'], [-2, '001'], [-3, '011'], [-4, '110'], [-5, '101'], [-6, '111'], [-3, '100']];\n    var defaultPitches = [[2, -6], [2, -5], [2, -4], [2, -3], [2, -2], [2, -1], [2, 0], [3, -6], [3, -5], [3, -4], [3, -3], [3, -2], [3, -1], [3, 0], [4, -4], [4, -3], [4, -2], [4, -1], [4, 0], [5, -3], [5, -2], [5, -1], [5, 0], [6, -2], [6, -1], [6, 0], [8, -4], [8, -3], [8, -2], [8, -1], [8, 0], [10, -3], [10, -2]];\n    var allPitches = [[2, -6], [2, -5], [2, -4], [2, -3], [2, -2], [2, -1], [2, 0], [3, -6], [3, -5], [3, -4], [3, -3], [3, -2], [3, -1], [4, -6], [3, 0], [4, -5], [4, -4], [4, -3], [5, -5], [4, -1], [4, -2], [5, -4], [4, 0], [5, -3], [5, -2], [6, -5], [5, -1], [6, -4], [5, 0], [6, -3], [7, -5], [6, -2], [6, -1], [7, -4], [7, -3], [6, 0], [8, -5], [7, -2], [8, -4], [7, -1], [9, -5], [8, -3], [7, 0], [9, -4], [8, -2], [10, -5], [8, -1], [9, -3], [10, -4], [9, -2], [8, 0], [11, -5], [10, -3], [9, -1], [10, -2]];\n    var pitches = (state.defaultsOnly ? defaultPitches : allPitches).map(function (_ref5) {\n      var _ref6 = _slicedToArray(_ref5, 2),\n          harmonic = _ref6[0],\n          offset = _ref6[1];\n\n      var valve = edo12(offset);\n      var transposed = edo12(offset + 2);\n      var angle = harmonic * valve;\n      return [angle, state.showValves ? parseInt(valves[Math.abs(offset)][1], 2) : nearestPitch(transposed * harmonic * state.base), frequencyColor(valve * state.base * 3)];\n    });\n    var show12EDO = true;\n    return mdx(React.Fragment, null, mdx(\"div\", {\n      style: {\n        overflow: 'auto',\n        maxWidth: 900,\n        maxHeight: 700,\n        position: 'relative'\n      }\n    }, mdx(Spiral, _extends({\n      width: 600,\n      height: 600,\n      stroke: \"gray\"\n    }, state, {\n      getRadius: function getRadius(angle, maxRadius, zoom) {\n        return zoom * angle * octaveRadius;\n      },\n      lines: [].concat(show12EDO ? Array.from({\n        length: 12\n      }, function (_, i) {\n        return [0, angle(Math.pow(2, i / 12) * Math.pow(2, state.max)), 'gray'];\n      }) : []),\n      labels: pitches.map(function (_ref7, i) {\n        var _ref8 = _slicedToArray(_ref7, 3),\n            ratio = _ref8[0],\n            label = _ref8[1],\n            color = _ref8[2];\n\n        return {\n          label: label,\n          angle: angle(ratio * 2),\n          fill: color || frequencyColor(ratio * state.base),\n          color: 'black'\n        };\n      }),\n      onTrigger: function onTrigger(i) {\n        return harp.triggerAttackRelease(pitches[i][0] * state.base, 1);\n      },\n      mdxType: \"Spiral\"\n    }))), mdx(\"label\", null, mdx(\"input\", {\n      type: \"checkbox\",\n      checked: state.defaultsOnly,\n      onChange: function onChange(e) {\n        return setState({\n          defaultsOnly: e.target.checked\n        });\n      }\n    }), \"Defaults Only\"), mdx(\"br\", null), mdx(\"label\", null, mdx(\"input\", {\n      type: \"checkbox\",\n      checked: state.showValves,\n      onChange: function onChange(e) {\n        return setState({\n          showValves: e.target.checked\n        });\n      }\n    }), \"Show Combinations\"));\n  }), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"as the harmonic series gets denser as we go up, more and more combinations will end up on similar notes in higher registers.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"most of those pitches will by slightly detuned to each other, depending on the tube length and harmonic\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"all the harmonic series start on their second partial (omitting the root partial), as by instrument design, the root partials are not intended to be played and hard to produce, so I omitted them.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"i have no idea how the exact length ratios of the slides are, I just assumed the roots were tuned to equal temperament. Nevertheless the pattern would look the same, just slightly detuned.\")), mdx(\"h3\", {\n    \"id\": \"default-combinations\"\n  }, \"Default Combinations\"), mdx(\"p\", null, \"In practice, there are certain default combinations, so for simplicity each note is mostly played with the same combination.\\nIt is desired that\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"the pitch is close to equal temperament, relative to the root note of the horn\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"lower harmonics are used in favor of higher harmonics\")), mdx(\"h2\", {\n    \"id\": \"further-ideas\"\n  }, \"Further Ideas\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Measure pitches of actual trumpet to find out where the \\u201Canchors\\u201D are\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Measure lengths of tube + slides of actual trumpet\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Write algorithm that outputs different default combinations for alternative tunings\")), mdx(\"h2\", {\n    \"id\": \"links\"\n  }, \"Links\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"http://www.dwerden.com/eu-articles-comp.cfm\"\n  }), \"Valve Systems\"), \" + \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"http://www.dwerden.com/comp/aCompIntro9_FlowFlow_F4.html\"\n  }), \"animated version\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://www.utc.edu/faculty/erika-schafer/musiceducatorresources/tuning.php\"\n  }), \"Trumpet Tuning Tendencies Relating to the Overtone Series with Solutions\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://music.stackexchange.com/questions/84172/trumpet-valves-lengths-and-pitch\"\n  }), \"Trumpet on music.stackexchange\"))));\n}\n;\nMDXContent.isMDXComponent = true;","slug":"/trumpet-harmonics/","title":"Trumpet Harmonics","tags":[],"keywords":[],"date":"May 19, 2020"},"previous":{"__typename":"MdxBlogPost","id":"61793316-76f8-53a8-be5f-fca1305531d9","excerpt":"Let's create some harmonic spirals. We can create one by winding the number line like this: you can think of this as a number line with aâ€¦","slug":"/harmonic-spirals/","title":"Harmonic Spirals","date":"May 09, 2020"},"next":{"__typename":"MdxBlogPost","id":"8a099b31-c986-5be4-923e-803592f97811","excerpt":"In this post, I want to find out how I can render  rhythmical format  as staff notation. About rhythmical In short, rhythmical is a smallâ€¦","slug":"/rhythmical-staff/","title":"Rhytmical Staff Notation","date":"May 24, 2020"}},"pageContext":{"id":"d0b4abab-ce23-5672-8aea-2e5d74cdd7ec","previousId":"61793316-76f8-53a8-be5f-fca1305531d9","nextId":"8a099b31-c986-5be4-923e-803592f97811"}}}