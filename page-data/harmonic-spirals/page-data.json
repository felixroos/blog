{"componentChunkName":"component---node-modules-gatsby-theme-blog-core-src-templates-post-query-js","path":"/harmonic-spirals/","result":{"data":{"site":{"siteMetadata":{"title":"Loophole Letters","social":[{"name":"github","url":"https://github.com/felixroos"},{"name":"GitHub","url":"https://github.com/gatsbyjs"}]}},"blogPost":{"__typename":"MdxBlogPost","id":"61793316-76f8-53a8-be5f-fca1305531d9","excerpt":"Let's play  Erv Wilson  and create some harmonic spirals. Linear Harmonic Spiral you can think of this as a number line with a twist…","body":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _Tone = Tone,\n    PolySynth = _Tone.PolySynth,\n    Synth = _Tone.Synth;\nvar harp = canUseDOM() && new PolySynth(6, Synth, {\n  volume: -16,\n  envelope: {\n    attack: 0.01,\n    decay: 2,\n    sustain: 0,\n    release: 0.1\n  },\n  oscillator: {\n    type: \"fmtriangle\"\n  }\n}).toMaster();\nvar _frontmatter = {\n  \"title\": \"Harmonic Spirals\",\n  \"date\": \"2020-04-20T00:00:00.000Z\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Let\\u2019s play \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://www.anaphoria.com/harm-subharm.pdf\"\n  }), \"Erv Wilson\"), \" and create some harmonic spirals.\"), mdx(\"h2\", {\n    \"id\": \"linear-harmonic-spiral\"\n  }, \"Linear Harmonic Spiral\"), mdx(State, {\n    initial: {\n      zoom: 0.11,\n      spin: 0,\n      precision: 4,\n      min: 0,\n      max: 6,\n      strokeWidth: 3,\n      base: 55,\n      fontSize: 14\n    },\n    mdxType: \"State\"\n  }, function (_ref2) {\n    var state = _ref2.state,\n        setState = _ref2.setState;\n    return mdx(React.Fragment, null, mdx(\"div\", {\n      style: {\n        overflow: \"auto\",\n        maxWidth: 900,\n        maxHeight: 700,\n        position: \"relative\"\n      }\n    }, mdx(HarmonicSpiral, _extends({\n      width: 600,\n      height: 600,\n      stroke: \"gray\"\n    }, state, {\n      onTrigger: function onTrigger(i) {\n        return harp.triggerAttackRelease((i + 1) * state.base, 1);\n      },\n      mdxType: \"HarmonicSpiral\"\n    })), mdx(\"div\", {\n      style: {\n        position: \"absolute\",\n        left: 10,\n        bottom: 30\n      }\n    }, mdx(SimplePopover, {\n      placement: \"left-start\",\n      mdxType: \"SimplePopover\"\n    }, mdx(\"div\", {\n      style: {\n        width: 300\n      }\n    }, mdx(SpiralSettings, {\n      state: state,\n      setState: setState,\n      mdxType: \"SpiralSettings\"\n    }))))));\n  }), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"you can think of this as a number line with a twist\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"starting at 1 (root pitch) in the center, we map one full rotation (=360 degrees) to the multiplication of 2 (octaves)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"each line starts at an odd number representing the beginning of a new pitch color\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"the line extends to infinity, crossing the spiral at octaves of the color\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"all natural numbers will be part of a line\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"the whole image is a dense visualization of the harmonic series from the perspective of octaves\")), mdx(\"h2\", {\n    \"id\": \"logarithmic-harmonic-spiral\"\n  }, \"Logarithmic Harmonic Spiral\"), mdx(\"p\", null, \"It gets even more accurate (but not as compact) if we use a logarithmic spiral:\"), mdx(State, {\n    initial: {\n      zoom: 0.85,\n      spin: 0,\n      precision: 0.2,\n      min: 5,\n      max: 11,\n      strokeWidth: 3,\n      stroke: \"gray\",\n      width: 600,\n      height: 600,\n      base: 55\n    },\n    mdxType: \"State\"\n  }, function (_ref3) {\n    var _extends2;\n\n    var state = _ref3.state,\n        setState = _ref3.setState;\n    return mdx(React.Fragment, null, mdx(\"div\", {\n      style: {\n        overflow: \"auto\",\n        maxWidth: 900,\n        maxHeight: 700,\n        position: \"relative\"\n      }\n    }, mdx(HarmonicSpiral, _extends({}, state, (_extends2 = {\n      onTrigger: function onTrigger(i) {\n        return console.log(\"trigger\", i);\n      },\n      getRadius: function getRadius(angle) {\n        return Math.pow(Math.abs(state.zoom) * 2, Math.abs(angle)) * Math.abs(state.zoom);\n      }\n    }, _defineProperty(_extends2, \"onTrigger\", function onTrigger(i) {\n      return harp.triggerAttackRelease((i + 1) * state.base, 1);\n    }), _defineProperty(_extends2, \"mdxType\", \"HarmonicSpiral\"), _extends2))), mdx(\"div\", {\n      style: {\n        position: \"absolute\",\n        left: 10,\n        bottom: 30\n      }\n    }, mdx(SimplePopover, {\n      placement: \"left-start\",\n      mdxType: \"SimplePopover\"\n    }, mdx(\"div\", {\n      style: {\n        width: 300\n      }\n    }, mdx(SpiralSettings, {\n      state: state,\n      setState: setState,\n      disableZoom: true,\n      mdxType: \"SpiralSettings\"\n    }))))));\n  }), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Here, the radius gets two times bigger on every rotation.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"This growth represents the behaviour of frequencies, as we go up the harmonic series.\")));\n}\n;\nMDXContent.isMDXComponent = true;","slug":"/harmonic-spirals/","title":"Harmonic Spirals","tags":[],"keywords":[],"date":"April 20, 2020"},"previous":{"__typename":"MdxBlogPost","id":"f32b7e0f-4d3d-55fb-8e79-2892c936ef3d","excerpt":"Let's understand the harmonic series by looking at a monochord: You can play it by hovering over it with the mouse.\nThe length / pitch can…","slug":"/harmonics/","title":"The Harmonic Series & Additive Synthesis","date":"April 20, 2020"},"next":{"__typename":"MdxBlogPost","id":"0f840e45-c3a8-513f-a9a4-3534990868c4","excerpt":"This article is the first of a series about Just Intonation. Using pure (or just) intervals to build musical tuning systems is called \"Just…","slug":"/intervals/","title":"Pure Intervals","date":"April 22, 2020"}},"pageContext":{"id":"61793316-76f8-53a8-be5f-fca1305531d9","previousId":"f32b7e0f-4d3d-55fb-8e79-2892c936ef3d","nextId":"0f840e45-c3a8-513f-a9a4-3534990868c4"}}}