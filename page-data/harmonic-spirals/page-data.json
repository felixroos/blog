{"componentChunkName":"component---node-modules-gatsby-theme-blog-core-src-templates-post-query-js","path":"/harmonic-spirals/","result":{"data":{"site":{"siteMetadata":{"title":"Loophole Letters","social":[{"name":"github","url":"https://github.com/felixroos"},{"name":"GitHub","url":"https://github.com/gatsbyjs"}]}},"blogPost":{"__typename":"MdxBlogPost","id":"61793316-76f8-53a8-be5f-fca1305531d9","excerpt":"Let's create some harmonic spirals. We can create one by winding the number line like this: you can think of this as a number line with aâ€¦","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Harmonic Spirals\",\n  \"date\": \"2020-05-09T00:00:00.000Z\",\n  \"keywords\": [\"tuning\", \"music theory\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Let\\u2019s create some harmonic spirals. We can create one by winding the number line like this:\"), mdx(AnimationFrame, {\n    mdxType: \"AnimationFrame\"\n  }, function (_ref2) {\n    var start = _ref2.start,\n        time = _ref2.time,\n        isRunning = _ref2.isRunning;\n    return mdx(State, {\n      initial: {\n        zoom: 0.11,\n        spin: 0,\n        precision: 4,\n        min: 0,\n        max: 5,\n        strokeWidth: 3,\n        base: Note.freq('Ab1'),\n        fontSize: 10,\n        compression: 1,\n        logarithmic: false,\n        hideLabels: false,\n        hideLines: false\n      },\n      mdxType: \"State\"\n    }, function (_ref3) {\n      var state = _ref3.state,\n          setState = _ref3.setState;\n      var zoom = state.zoom,\n          spin = state.spin,\n          compression = state.compression,\n          linearity = state.linearity,\n          hideLines = state.hideLines;\n\n      var animated = _objectSpread(_objectSpread({}, props), animateSpiral(state, time.progress, easeCubicIn));\n\n      return mdx(React.Fragment, null, mdx(Button, {\n        color: \"primary\",\n        onClick: function onClick() {\n          return start(16000);\n        },\n        mdxType: \"Button\"\n      }, !isRunning ? 'Play Animation' : 'Stop Animation'), mdx(\"br\", null), mdx(\"div\", {\n        style: {\n          overflow: 'auto',\n          maxWidth: 900,\n          maxHeight: 700,\n          position: 'relative'\n        }\n      }, mdx(HarmonicSpiral, _extends({\n        width: 600,\n        height: 600,\n        stroke: \"gray\"\n      }, state, animated, {\n        getRadius: function getRadius(angle, maxRadius, zoom) {\n          if (state.logarithmic) {\n            var compensation = 41;\n            return Math.pow(2, Math.abs(angle)) * Math.abs(state.zoom * compensation);\n          }\n\n          return angle * maxRadius * zoom;\n        },\n        onTrigger: function onTrigger(partial) {\n          return harp.triggerAttackRelease(partial * state.base, 1);\n        },\n        mdxType: \"HarmonicSpiral\"\n      })), time.progress > 0.99 && mdx(\"div\", {\n        style: {\n          position: 'absolute',\n          left: 10,\n          bottom: 30\n        }\n      }, mdx(SimplePopover, {\n        placement: \"left-start\",\n        mdxType: \"SimplePopover\"\n      }, mdx(\"div\", {\n        style: {\n          width: 300\n        }\n      }, mdx(SpiralSettings, {\n        state: state,\n        setState: setState,\n        mdxType: \"SpiralSettings\"\n      }), mdx(\"br\", null), mdx(\"label\", null, mdx(\"input\", {\n        type: \"checkbox\",\n        checked: state.logarithmic,\n        onChange: function onChange(e) {\n          return setState({\n            logarithmic: e.target.checked\n          });\n        }\n      }), \"Logarithmic\"), mdx(\"br\", null), mdx(\"label\", null, mdx(\"input\", {\n        type: \"checkbox\",\n        checked: !state.hideLabels,\n        onChange: function onChange(e) {\n          return setState({\n            hideLabels: !e.target.checked\n          });\n        }\n      }), \"Labels\"), mdx(\"br\", null), mdx(\"label\", null, mdx(\"input\", {\n        type: \"checkbox\",\n        checked: !state.hideLines,\n        onChange: function onChange(e) {\n          return setState({\n            hideLines: !e.target.checked\n          });\n        }\n      }), \"Lines\"))))));\n    });\n  }), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"you can think of this as a number line with a twist\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"starting at 1 (root pitch) in the center, we map one full rotation (=360 degrees) to the multiplication of 2 (octaves)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"each line starts at an odd number representing the beginning of a new pitch color\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"the line extends to infinity, crossing the spiral at octaves of the color\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"all natural numbers will be part of a line\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"the whole image is a dense visualization of the harmonic series from the perspective of octaves\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"it gets even more accurate (but not as compact) if we use a logarithmic spiral\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"its radius gets two times bigger on every rotation.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"its growth represents the behaviour of frequencies, as we go up the harmonic series.\")))), mdx(\"h2\", {\n    \"id\": \"3-limit-spiral\"\n  }, \"3 Limit Spiral\"), mdx(\"p\", null, \"Instead of the harmonic series, we can also display the ratios of any tuning system.\"), mdx(\"p\", null, \"The following spiral displays stacked fourths, which can be seen as a 3 limit system.\"), mdx(\"details\", null, mdx(\"summary\", null, \"Click to expand why I chose fourths instead of fifths\"), mdx(\"p\", null, \"I picked fourths, as they grow slower in pitch, compared to fifths.\\nThis benefits our ears when listening to the non octave reduced pitches\"), mdx(\"p\", null, \"Here is why stacked fourths are just a form of 3-limit:\"), mdx(InlineMath, {\n    mdxType: \"InlineMath\"\n  }, \"{(\\\\frac{4}{3}})^n = 2^{2n} * 3^{-n}\")), mdx(State, {\n    initial: {\n      zoom: 0.8,\n      spin: 0,\n      precision: 1,\n      min: 1,\n      max: 6,\n      strokeWidth: 2,\n      base: Note.freq('A2'),\n      fontSize: 12,\n      reduce: false,\n      temper: false\n    },\n    mdxType: \"State\"\n  }, function (_ref4) {\n    var state = _ref4.state,\n        setState = _ref4.setState;\n    var generator = 4 / 3;\n    var notes = 54;\n    var octaveRadius = 60;\n    var ratios = Array.from({\n      length: notes\n    }, function (_, i) {\n      return Math.pow(generator, i);\n    });\n    var show12EDO = true;\n    var eq = state.temper ? 2 : equivalence(Math.pow(generator, 12), 2);\n    var comma = 1 - equivalence(Math.pow(generator, 12), 2) / 2; // const comma = 1 - equivalence(Math.pow(generator, 12), 2);\n\n    if (state.temper) {\n      ratios = ratios.map(function (ratio, i) {\n        return ratio * (1 + comma * i / 12);\n      });\n    }\n\n    if (state.reduce) {\n      ratios = ratios.map(function (ratio, i) {\n        return clamp(ratio, Math.pow(eq, Math.floor((i - 1) / 12))); // ;\n        //return equivalence(ratio, Math.pow(eq, Math.floor((i - 1) / 12)));\n        //return equivalence(ratio, 2) * Math.pow(2, Math.floor(i / 12));\n      });\n    }\n\n    return mdx(React.Fragment, null, mdx(\"div\", {\n      style: {\n        overflow: 'auto',\n        maxWidth: 900,\n        maxHeight: 700,\n        position: 'relative'\n      }\n    }, mdx(Spiral, _extends({\n      width: 600,\n      height: 600,\n      stroke: \"gray\"\n    }, state, {\n      getRadius: function getRadius(angle, maxRadius, zoom) {\n        return zoom * angle * octaveRadius;\n      },\n      lines: [].concat(show12EDO ? Array.from({\n        length: 12\n      }, function (_, i) {\n        return [0, angle(Math.pow(2, i / 12) * Math.pow(2, state.max)), 'gray'];\n      }) : []).concat(ratios.map(function (ratio, i) {\n        return [angle(ratio * 2), angle(ratio * Math.pow(2, state.max)), frequencyColor(ratio * state.base)];\n      })),\n      labels: ratios.map(function (ratio, i) {\n        return {\n          label: i + '',\n          angle: angle(ratio * 2),\n          fill: frequencyColor(ratio * state.base),\n          color: 'black'\n        };\n      }),\n      onTrigger: function onTrigger(i) {\n        return harp.triggerAttackRelease(ratios[i] * state.base, 1);\n      },\n      mdxType: \"Spiral\"\n    })), mdx(\"div\", {\n      style: {\n        position: 'absolute',\n        left: 10,\n        bottom: 30\n      }\n    }, mdx(SimplePopover, {\n      placement: \"left-start\",\n      mdxType: \"SimplePopover\"\n    }, mdx(\"label\", null, mdx(\"input\", {\n      type: \"checkbox\",\n      checked: state.reduce,\n      onChange: function onChange(e) {\n        return setState({\n          reduce: e.target.checked\n        });\n      }\n    }), \"Octave Reduced\"), mdx(\"br\", null), mdx(\"label\", null, mdx(\"input\", {\n      type: \"checkbox\",\n      checked: state.temper,\n      onChange: function onChange(e) {\n        return setState({\n          temper: e.target.checked\n        });\n      }\n    }), \"Tempered\"), mdx(\"br\", null), mdx(\"br\", null), mdx(\"div\", {\n      style: {\n        width: 300\n      }\n    }, mdx(SpiralSettings, {\n      state: state,\n      setState: setState,\n      mdxType: \"SpiralSettings\"\n    }))))));\n  }), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The numbers are the powers of 4/3 (which is the ratio of a pure fourth)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The gray lines show where equal tempered notes would intersect the spiral\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"You can see that the further we go up, the error between equal temperament and stacked fourths gets bigger\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"In the settings, we can apply octave reduction to bring each 12 notes into one octave, creating a chromatic spiral\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"When octave reduced, we can see the \\u201Cerror\\u201D in the curvature of the (almost) octaves\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"If we check the tempered box, all fourths are comma corrected,\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"for example, the 12ths power iss added one full comma, the 24th power 2 etc (and all in between get logs of 2, see code for details)\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The temperament leads to really complex ratios\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"We can also see a slight error of the temperment, I am not sure if this is a problem of Javascript or a problem of the algorithm\")))), mdx(\"details\", null, mdx(\"summary\", null, \"Unsolved: Comma Temperament vs Equal Temperament\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"We know that when applying fractions/factors of the comma (which is rational), all resulting tempered ratios remain rational.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"In contrast, standard equal temperament is generated with multiples of the 12th root of 2, which is irrational\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The question: What\\u2019s the difference between \\u201Ccomma temperament\\u201D and standard equal temperament\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"There has to be some error in the \\u201Ccomma temperament\\u201D that I am not seeing right now\"))), mdx(\"br\", null), mdx(\"br\", null), mdx(\"h2\", {\n    \"id\": \"further-reading\"\n  }, \"Further Reading\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"http://www.anaphoria.com/harm-subharm.pdf\"\n  }, \"Erv Wilson Harmonic Spirals\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://jhhl.net/TS/tonespiral.html\"\n  }, \"tonespiral\"))), mdx(\"details\", null, mdx(\"summary\", null, \"TBD\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"find unified way to generate those linear scales from generator interval + number of notes + number of notes per octave?!\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"e.g. generate(4/3, 25, 13) => stacks 24 fourths and packs each 13 fourths into one octave\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"or generate(3/2, 25, 12) => stacks 25 fifths and packs each 12 fifths into one octave\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"find way to animate between temperment and non temperment\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"find out why tempering Pythagorean tuning results in 12edo (or seems to)\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"at the first thought I cannot see where the irrationality comes from, as the comma is also just a fraction\"))))));\n}\n;\nMDXContent.isMDXComponent = true;","slug":"/harmonic-spirals/","title":"Harmonic Spirals","tags":[],"keywords":["tuning","music theory"],"date":"May 09, 2020","image":null,"imageAlt":null,"socialImage":null},"previous":{"__typename":"MdxBlogPost","id":"2eb919ff-c8d8-50e7-b752-eb73b1e6f95a","excerpt":"After fiddling around with digital monochords and cheap web audio sounds,\nI decided to give my build a physical monochord from scrap wood toâ€¦","slug":"/monochord/","title":"DIY Monochord","date":"May 07, 2020"},"next":{"__typename":"MdxBlogPost","id":"d0b4abab-ce23-5672-8aea-2e5d74cdd7ec","excerpt":"The harmonic spiral from last post can also be used to vizualize the harmonics of instruments that work with overblowing, like a trumpetâ€¦","slug":"/trumpet-harmonics/","title":"Trumpet Harmonics","date":"May 19, 2020"}},"pageContext":{"id":"61793316-76f8-53a8-be5f-fca1305531d9","previousId":"2eb919ff-c8d8-50e7-b752-eb73b1e6f95a","nextId":"d0b4abab-ce23-5672-8aea-2e5d74cdd7ec"}},"staticQueryHashes":["386998304","4198970465","764694655"]}