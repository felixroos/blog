{"componentChunkName":"component---node-modules-gatsby-theme-blog-core-src-templates-post-query-js","path":"/rhythmical-playback/","result":{"data":{"site":{"siteMetadata":{"title":"Loophole Letters","social":[{"name":"github","url":"https://github.com/felixroos"},{"name":"GitHub","url":"https://github.com/gatsbyjs"}]}},"blogPost":{"__typename":"MdxBlogPost","id":"6dd1e095-9570-58e5-80b8-ddf949a7fa94","excerpt":"Before implementing more rhythmical features, it would be good to hear some results. This is where the Player comes in.\nThe Player itself…","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Tone.js Playback\",\n  \"date\": \"2020-06-09T00:00:00.000Z\",\n  \"keywords\": [\"rhythmical\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Before implementing more rhythmical features, it would be good to hear some results. This is where the Player comes in.\\nThe Player itself will be independent of rhythmical, but able to play flat note events (value, time, duration), as generated by rhythmical.\"), mdx(\"h2\", {\n    \"id\": \"note-event-playback\"\n  }, \"Note Event Playback\"), mdx(\"p\", null, \"First, let\\u2019s code a simple playback with Tone.js:\"), mdx(\"p\", null, \"Using Tone.Part we can use a flat event array directly:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\"\n  }, \"import canUseDOM from '../canUseDOM';\\nimport { max } from 'd3-array';\\nconst { PolySynth, Synth } = Tone;\\n\\nconst synth =\\n  canUseDOM() &&\\n  new PolySynth(6, Synth, {\\n    volume: -16,\\n    envelope: { attack: 0.01, decay: 2, sustain: 0, release: 0.1 },\\n    oscillator: { type: 'fmtriangle' }\\n  }).toMaster();\\n\\nexport function playEvents(\\n  events: ValueChild<string>[],\\n  config: {\\n    duration?: number;\\n    instrument?;\\n  } = {}\\n) {\\n  let {\\n    instrument = synth,\\n    duration = max(events.map((e) => e.time + e.duration))\\n  } = config;\\n  // play back with tonal\\n  const part = new Tone.Part(\\n    (time, event) =>\\n      instrument.triggerAttackRelease(event.value, event.duration, time),\\n    events // <- the events are used here\\n  ).start(0);\\n  part.loop = true;\\n  part.loopEnd = duration;\\n  Tone.Transport.start('+0.1');\\n  return part;\\n}\\n\")), mdx(\"p\", null, \"with it, we can then trigger playback:\"), mdx(PlayButton, {\n    events: renderRhythmObject({\n      parallel: [['E3', 'F3', 'G3', 'A3'], ['C3', 'D3', 'E3', 'F3']]\n    }),\n    mdxType: \"PlayButton\"\n  }), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\"\n  }, \"playEvents(\\n  renderRhythmObject({\\n    parallel: [\\n      ['E3', 'F3', 'G3', 'A3'],\\n      ['C3', 'D3', 'E3', 'F3']\\n    ]\\n  })\\n);\\n\")), mdx(\"h3\", {\n    \"id\": \"custom-sample-playback\"\n  }, \"Custom Sample Playback\"), mdx(\"p\", null, \"Instead of using a synth, we could use a sampler to e.g. play drums:\"), mdx(\"details\", null, mdx(\"summary\", null, \"show rack src\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\"\n  }, \"export function rack(samples: { [key: string]: any }, options = {}) {\\n  options = { volume: -12, attack: 0.05, ...options };\\n  let players = new Tone.Players(samples, options);\\n\\n  const s = {\\n    customSymbols: Object.keys(samples),\\n    triggerAttackRelease: (key, duration, time, velocity) => {\\n      if (!players.has(key)) {\\n        console.warn(`key ${key} not found for playback`);\\n        return;\\n      }\\n      const player = players.get(key);\\n      player.start(time);\\n      player.stop(time + duration);\\n    },\\n    connect: (dest) => {\\n      players.connect(dest);\\n      return s;\\n    },\\n    toMaster: () => {\\n      players.toMaster();\\n      return s;\\n    }\\n  };\\n  return s;\\n}\\n\"))), mdx(\"p\", null, \"The triggerAttackRelease method acts as a Tone \\u201CAPI-polyfill\\u201D to be able to just pass it to our playback:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\"\n  }, \"// create drums from samples\\nconst drums =\\n  canUseDOM() &&\\n  rack({\\n    bd: require('./bd/BT0A0D0.wav'),\\n    sn: require('./sn/ST0T0S3.wav'),\\n    hh: require('./hh/000_hh3closedhh.wav'),\\n    cp: require('./cp/HANDCLP0.wav'),\\n    mt: require('./mt/MT0D3.wav'),\\n    ht: require('./ht/HT0D3.wav'),\\n    lt: require('./lt/LT0D3.wav')\\n  }).toMaster();\\n// play\\nplayEvents(\\n  renderRhythmObject({\\n    duration: 2,\\n    parallel: [\\n      ['hh', 'hh', 'hh', 'hh', 'hh', 'hh', 'hh', 'hh'],\\n      ['bd', ['sn', 'bd'], 'bd', 'sn']\\n    ]\\n  }),\\n  { instruments: { drums } }\\n);\\n\")), mdx(PlayButton, {\n    instruments: {\n      drums: drums\n    },\n    events: renderRhythmObject({\n      duration: 2,\n      parallel: [['hh', 'hh', 'hh', 'hh', 'hh', 'hh', 'hh', 'hh'], ['bd', ['sn', 'bd'], 'bd', 'sn']]\n    }, [inheritProperty('instrument')]),\n    mdxType: \"PlayButton\"\n  }), mdx(\"h2\", {\n    \"id\": \"using-multiple-instruments\"\n  }, \"Using multiple instruments\"), mdx(\"p\", null, \"To be able to use multiple instruments without using multiple rhythmical objects, we can add a feature that inherits the property instrument:\"), mdx(PlayButton, {\n    instruments: {\n      synth: synth,\n      drums: drums\n    },\n    events: renderRhythmObject({\n      duration: 4,\n      parallel: [[[['Eb4', 'F4', 'r', 'G3'], ['r', 'r', 'r', 'G3']], [['r', 'Bb3'], 'G3', 'r', ['r', 'D4']]], [['C3', 'C3', 'G2', 'r'], ['C3', 'C3', 'G2', 'r']], [{\n        instrument: 'drums',\n        parallel: [[['hh', 'hh', 'hh', 'hh', 'hh', 'hh', 'hh', 'hh'], ['hh', 'hh', 'hh', 'hh', 'hh', 'hh', 'hh', ['hh', 'hh']]], [['bd', ['sn', 'bd'], 'bd', 'sn'], ['bd', ['sn', 'r', 'r', 'bd'], 'bd', 'sn']]]\n      }]]\n    }, [inheritProperty('instrument')]),\n    mdxType: \"PlayButton\"\n  }), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\"\n  }, \"playEvents(\\n  renderRhythmObject(\\n    {\\n      duration: 4,\\n      parallel: [\\n        [\\n          [\\n            ['Eb4', 'F4', 'r', 'G3'],\\n            ['r', 'r', 'r', 'G3']\\n          ],\\n          [['r', 'Bb3'], 'G3', 'r', 'r']\\n        ],\\n        [\\n          ['C3', 'C3', 'G2', 'r'],\\n          ['C3', 'C3', 'G3', 'r']\\n        ],\\n        [\\n          {\\n            instrument: 'drums',\\n            parallel: [\\n              [\\n                ['hh', 'hh', 'hh', 'hh', 'hh', 'hh', 'hh', 'hh'],\\n                ['hh', 'hh', 'hh', 'hh', 'hh', 'hh', 'hh', ['hh', 'hh']]\\n              ],\\n              [\\n                ['bd', ['sn', 'bd'], 'bd', 'sn'],\\n                ['bd', ['sn', 'r', 'r', 'bd'], 'bd', 'sn']\\n              ]\\n            ]\\n          }\\n        ]\\n      ]\\n    },\\n    [inheritProperty('instrument')]\\n  ),\\n  { instruments: { synth, drums } }\\n);\\n\")), mdx(\"p\", null, \"We can use anything as instrument that has a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"triggerAttackRelease(note,duration,time)\"), \" method!\\nIf no instrument is set, the first in the object is used.\"), mdx(\"h2\", {\n    \"id\": \"next-steps\"\n  }, \"Next Steps\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Microtonal support for Player\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Be able to change events while playing => good for live coding or generative composition\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"use rhythmical for parameter automation\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"implement playback queue => for seamless transitions\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"implement loop grid\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"implement step sequencer with dividable resizable units\")));\n}\n;\nMDXContent.isMDXComponent = true;","slug":"/rhythmical-playback/","title":"Tone.js Playback","tags":[],"keywords":["rhythmical"],"date":"June 09, 2020","image":null,"imageAlt":null,"socialImage":null},"previous":{"__typename":"MdxBlogPost","id":"4c59f9e6-3f00-5f54-b5bf-7bd71f4936f8","excerpt":"In the last post, we implemented the  rhythmical array notation .\nToday, I want to write about why and how the more powerful rhythmical…","slug":"/rhythmical-objects/","title":"Rhythmical Objects","date":"May 29, 2020"},"next":{"__typename":"MdxBlogPost","id":"bdafcba1-105a-5d30-900e-8138f1dfe63e","excerpt":"After playback was implemented in the last post, we can now feed our eyes with some colored bars: Drawing the SVG Using a little bit of d…","slug":"/svg-piano-roll/","title":"SVG Piano Roll Component","date":"June 10, 2020"}},"pageContext":{"id":"6dd1e095-9570-58e5-80b8-ddf949a7fa94","previousId":"4c59f9e6-3f00-5f54-b5bf-7bd71f4936f8","nextId":"bdafcba1-105a-5d30-900e-8138f1dfe63e"}},"staticQueryHashes":["386998304","4198970465","764694655"]}